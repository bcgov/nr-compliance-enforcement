CREATE TABLE
  public.gir_type_code (
    gir_type_code varchar(10) NOT NULL,
    short_description varchar(50) NOT NULL,
    long_description varchar(250) NULL,
    display_order int4 NOT NULL,
    active_ind bool NOT NULL,
    create_user_id varchar(32) NULL,
    create_utc_timestamp timestamp NOT NULL,
    update_user_id varchar(32) NULL,
    update_utc_timestamp timestamp NOT NULL,
    CONSTRAINT "PK_girtypecd" PRIMARY KEY (gir_type_code)
  );

CREATE TABLE
  public.gir_complaint (
    gir_complaint_guid uuid NOT NULL DEFAULT uuid_generate_v4 (),
    gir_type_code varchar(10) NULL,
    create_user_id varchar(32) NOT NULL,
    create_utc_timestamp timestamp NOT NULL,
    update_user_id varchar(32) NOT NULL,
    update_utc_timestamp timestamp NOT NULL,
    complaint_identifier varchar(20) NOT NULL,
    CONSTRAINT "PK_gircmplnt" PRIMARY KEY (gir_complaint_guid),
    CONSTRAINT "UQ_gircmplnt" UNIQUE (complaint_identifier),
    CONSTRAINT "FK_gircmplnt_complaint" FOREIGN KEY (complaint_identifier) REFERENCES public.complaint (complaint_identifier),
    CONSTRAINT "FK_gircmplnt_cmpltgircd" FOREIGN KEY (gir_type_code) REFERENCES public.gir_type_code (gir_type_code)
  );

CREATE TABLE
  gir_complaint_h (
    h_gircmplt_guid uuid NOT NULL DEFAULT uuid_generate_v4 (),
    target_row_id uuid NOT NULL,
    operation_type char(1) NOT NULL,
    operation_user_id varchar(32) NOT NULL DEFAULT current_user,
    operation_executed_at timestamp NOT NULL DEFAULT now (),
    data_after_executed_operation jsonb,
    CONSTRAINT "PK_h_gircmplt" PRIMARY KEY (h_gircmplt_guid)
  );

CREATE
or REPLACE TRIGGER gircmplt_history_trigger BEFORE INSERT
OR DELETE
OR
UPDATE ON gir_complaint FOR EACH ROW EXECUTE PROCEDURE audit_history ('gir_complaint_h', 'gir_complaint_guid');

-- Main Table
comment on column public.gir_complaint.gir_complaint_guid is 'System generated unique key for a gir complaint. This key should never be exposed to users via any system utilizing the tables.';

comment on column public.gir_complaint.complaint_identifier is 'Natural key for a complaint generated by webEOC.';

comment on column public.gir_complaint.gir_type_code is 'A human readable code used to identify a type of GIR complaint.';

comment on column public.gir_complaint.create_user_id is 'The id of the user that created the GIR complaint.';

comment on column public.gir_complaint.create_utc_timestamp is 'The timestamp when the GIR complaint was created.  The timestamp is stored in UTC with no Offset.';

comment on column public.gir_complaint.update_user_id is 'The id of the user that updated the GIR complaint.';

comment on column public.gir_complaint.update_utc_timestamp is 'The timestamp when the GIR complaint was updated.  The timestamp is stored in UTC with no Offset.';

-- History Table
COMMENT on table public.gir_complaint_h is 'History table for gir_complaint table';

COMMENT on column public.gir_complaint_h.h_gircmplt_guid is 'System generated unique key for GIR complaint history. This key should never be exposed to users via any system utilizing the tables.';

COMMENT on column public.gir_complaint_h.target_row_id is 'The unique key for the GIR complaint that has been created or modified.';

COMMENT on column public.gir_complaint_h.operation_type is 'The operation performed: I = Insert, U = Update, D = Delete';

COMMENT on column public.gir_complaint_h.operation_user_id is 'The id of the user that created or modified the data in the GIR complaint table.  Defaults to the logged in user if not passed in by the application.';

COMMENT on column public.gir_complaint_h.operation_executed_at is 'The timestamp when the data in the GIR complaint table was created or modified.  The timestamp is stored in UTC with no Offset.';

COMMENT on column public.gir_complaint_h.data_after_executed_operation is 'A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table.';