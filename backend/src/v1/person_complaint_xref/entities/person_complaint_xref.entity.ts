import { ApiProperty } from "@nestjs/swagger";
import { UUID } from "crypto";
import { AttractantCode } from "../../attractant_code/entities/attractant_code.entity";
import { HwcrComplaint } from "../../hwcr_complaint/entities/hwcr_complaint.entity";
import { Column, Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from "typeorm"
import { Person } from "src/v1/person/entities/person.entity";
import { Complaint } from "src/v1/complaint/entities/complaint.entity";
import { PersonComplaintXrefCode } from "src/v1/person_complaint_xref_code/entities/person_complaint_xref_code.entity";

@Entity()
export class PersonComplaintXref {

    @ApiProperty({
        example: "903f87c8-76dd-427c-a1bb-4d179e443252",
        description: "System generated unique key for an attractant hwcr relationship. This key should never be exposed to users via any system utilizing the tables.",
    })
    @PrimaryGeneratedColumn()
    public person_complaint_xref_guid: UUID

    @ApiProperty({
        example: "IDIR\mburns",
        description: "The id of the user that created the relationship between a person and a complaint.",
    })
    @Column({length: 32})
    create_user_id: string;

    @ApiProperty({
    example: "903f87c8-76dd-427c-a1bb-4d179e443252",
    description: "The unique guid of the user that created the cross reference.",
    })
    @Column({type: "uuid"})
    create_user_guid: UUID;

    @ApiProperty({
    example: "2003-04-12 04:05:06",
    description: "The timestamp when the relationship between a person and a complaint  was created.  The timestamp is stored in UTC with no Offset.",
    })
    @Column()
    create_timestamp: Date;

    @ApiProperty({
    example: "IDIR\mburns",
    description: "The id of the user that updated the relationship between a person and a complaint .",
    })
    @Column({length: 32})
    update_user_id: string;

    @ApiProperty({
    example: "903f87c8-76dd-427c-a1bb-4d179e443252",
    description: "The unique guid of the user that updated the cross reference.",
    })
    @Column({type: "uuid"})
    update_user_guid: UUID;

    @ApiProperty({
    example: "2003-04-12 04:05:06",
    description: "The timestamp when the relationship between a person and a complaint  was updated.  The timestamp is stored in UTC with no Offset.",
    })
    @Column()
    update_timestamp: Date;

    @ManyToOne(() => Person, (person) => person.person_guid)
    @JoinColumn({name: "person_guid"})
    @ApiProperty({
      example: "903f87c8-76dd-427c-a1bb-4d179e443252",
      description: "System generated unique key for an person.",
    })
    public person: Person;

    @ManyToOne(() => Complaint, (complaint) => complaint.complaint_identifier)
    @JoinColumn({name: "complaint_identifier"})
    @ApiProperty({
      example: "YY-123456",
      description: "Natural key for a complaint generated by webEOC.  Format is YY-###### where the number portion of the sequence resets to 0 on the new year.",
    })
    public complaint: Complaint;

    @ManyToOne(() => PersonComplaintXrefCode, (person_complaint_xref_code) => person_complaint_xref_code.person_complaint_xref_code)
    @JoinColumn({name: "person_complaint_xref_code"})
    @ApiProperty({
      example: "903f87c8-76dd-427c-a1bb-4d179e443252",
      description: "A human readable code used to identify a relationship type between a person and a complaint.",
    })
    public person_complaint_xref_code: PersonComplaintXrefCode;

    @ApiProperty({ example: "True", description: "A boolean indicator to determine if the cross reference is active." })
    @Column()
    active_ind: boolean;
}
