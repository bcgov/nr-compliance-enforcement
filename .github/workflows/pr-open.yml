name: PR

on:
  pull_request:
    branches:
      - release/**
    types:
      - opened
      - reopened
      - synchronize

concurrency:
  # Cancel in progress for PR open and close
  group: ${{ github.event.number }}
  cancel-in-progress: true

env:
  GITOPS_REPO_BRANCH: main
  GITOPS_REPO: bcgov-c/tenant-gitops-f208ae
  GITOPS_REPO_VALUES_PATH: ./charts/apps/natsuite/values
  GITOPS_REPO_OUTPUTS_PATH: ./charts/apps/natsuite/values/.outputs

jobs:
  validate-flyway-migrations:
    name: Validate Flyway Migrations
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_DB: default
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: default
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Run Flyway migrations
        uses: docker://flyway/flyway:10
        env:
          FLYWAY_URL: jdbc:postgresql://postgres:5432/default
          FLYWAY_USER: postgres
          FLYWAY_PASSWORD: default
          FLYWAY_LOCATIONS: filesystem:./migrations/migrations
          FLYWAY_DEFAULT_SCHEMA: complaint
        with:
          args: info migrate info

  # https://github.com/bcgov/action-builder-ghcr
  builds:
    name: Builds
    runs-on: ubuntu-22.04
    outputs:
      digest: ${{ steps.builds.outputs.digest }}
      sha: ${{ github.sha }}
    strategy:
      matrix:
        package:
          [
            backend,
            frontend,
            migration-complaint,
            webeoc,
            backend-cm,
            migration-complaint-outcome,
            migration-investigation,
            migration-inspection,
            migration-shared,
          ]
    timeout-minutes: 10
    steps:
      - uses: bcgov/action-builder-ghcr@v2.2.0
        with:
          package: ${{ matrix.package }}
          tag: ${{ github.event.number }}
          tag_fallback: latest
          # triggers: ('${{ matrix.package }}/')
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/${{ matrix.package }}
          target: ${{ github.event.number }}
          tags: |
            ${{ github.sha }}

  # build prepackaged cypress and playwright images
  # https://github.com/bcgov/action-builder-ghcr
  build-playwright:
    name: Build Playwright
    runs-on: ubuntu-22.04
    outputs:
      digest: ${{ steps.build-playwright.outputs.digest }}
      sha: ${{ github.sha }}
    timeout-minutes: 15
    steps:
      - uses: bcgov/action-builder-ghcr@v2.2.0
        with:
          package: frontend-playwright
          build_file: frontend/Dockerfile.playwright
          build_context: frontend/
          tag: ${{ github.event.number }}
          tag_fallback: latest
      - uses: shrink/actions-docker-registry-tag@v4
        with:
          registry: ghcr.io
          repository: ${{ github.repository }}/frontend-playwright
          target: ${{ github.event.number }}
          tags: |
            ${{ github.sha }}

  tests:
    name: Tests
    if: (! github.event.pull_request.draft)
    needs: [builds]
    uses: ./.github/workflows/.tests.yml
    with:
      target: ${{ github.event.number }}
    secrets: inherit # so that the tests github action can use the secrests that this action has access to

  results:
    name: PR Results
    needs: [builds, tests]
    if: always() && (!failure()) && (!cancelled())
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Success!"

  ### Emerald Jobs ###
  deploy-emerald:
    name: Deploy Workloads To Emerald
    needs: [builds, build-playwright, validate-flyway-migrations]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout CD repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITOPS_REPO }}
          ssh-key: ${{ secrets.MANIFEST_REPO_DEPLOY_KEY }}
          ref: ${{ env.GITOPS_REPO_BRANCH }}

      - name: Calculate Deployment Number
        id: get-deployment-number
        shell: bash
        run: |
          PR_NUMBER=$(echo ${{ github.event.number }})
          PR_NUMBER_MOD_TEN=$(($PR_NUMBER % 10))
          echo "DEPLOYMENT_NUMBER=$(($PR_NUMBER_MOD_TEN))" >> $GITHUB_OUTPUT

      - name: Configure git
        # From https://github.com/orgs/community/discussions/26560#discussioncomment-3531273
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Update dev environment tag and enable it for deployment
        run: |
          DEPLOYMENT_NUMBER=${{ steps.get-deployment-number.outputs.DEPLOYMENT_NUMBER }}
          VALUES_DIR="${{ env.GITOPS_REPO_VALUES_PATH }}" \
          OUTPUTS_DIR="${{ env.GITOPS_REPO_OUTPUTS_PATH }}" \
          ./.github/scripts/gitops.sh tag dev-$DEPLOYMENT_NUMBER ${{ needs.builds.outputs.sha }}

          VALUES_DIR="${{ env.GITOPS_REPO_VALUES_PATH }}" \
          OUTPUTS_DIR="${{ env.GITOPS_REPO_OUTPUTS_PATH }}" \
          ./.github/scripts/gitops.sh enable dev-$DEPLOYMENT_NUMBER

      # We always run this to avoid deleting developer databases on commit pushes after a PR is opened
      # there is a small edge case where a cleanup could be interrupted by this if 2 PRs open closely together
      - name: Unset / No-op Crunchy development DB cleanup
        run: |
          ./.github/scripts/crunchy.sh u

      # On a newly opened PR we drop the old database and crunchy will standup a fresh db
      - name: Refresh developer database for newly opened PR
        if: ${{ github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened') }}
        run: |
          DEPLOYMENT_NUMBER=${{ steps.get-deployment-number.outputs.DEPLOYMENT_NUMBER }}
          ./.github/scripts/crunchy.sh s $DEPLOYMENT_NUMBER

      - name: Commit and push update
        shell: bash
        run: |
          DEPLOYMENT_NUMBER=${{ steps.get-deployment-number.outputs.DEPLOYMENT_NUMBER }}
          ./.github/scripts/gitops.sh commitall "Updating dev-$DEPLOYMENT_NUMBER for PR ${{ github.event.number }}"
          git push origin ${{ env.GITOPS_REPO_BRANCH }}
