name: Handle PR Merge and Version Update

on:
  pull_request:
    types: [closed]
    branches:
      - release/**
jobs:
  handle_pr:
    name: Handle Merged PR
    runs-on: ubuntu-22.04
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
          fetch-tags: true

      - name: Update package.json versions
        id: increment_version
        # The old and new versions are currently being read from the frontend package.json
        # since all three packages are being kept in sync.
        run: |
          cd frontend
          echo "::set-output name=old_version::$(npm pkg get version | tr -d '"')"
          npm version patch --no-git-tag-version
          echo "::set-output name=new_version::$(npm pkg get version | tr -d '"')"
          new_v=$(npm pkg get version | tr -d '"')
          echo "Frontend package.json version updated to $new_v"

          cd ../backend
          npm version $new_v --no-git-tag-version
          echo "Backend package.json version updated to $new_v"

          cd ../webeoc
          npm version $new_v --no-git-tag-version
          echo "WebEOC package.json version updated to $new_v"

          cd ..

      - name: Commit and Push Version Update
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add frontend/package.json backend/package.json webeoc/package.json
          git commit -m "chore: bump version to ${{ steps.increment_version.outputs.new_version }}"
          git push origin HEAD:${{ github.ref }}

      - name: Create Git Tag and Delete Old Tag
        run: |
          git push --delete origin "v${{ steps.increment_version.outputs.old_version }}"
          git tag "v${{ steps.increment_version.outputs.new_version }}"
          git push origin v${{ steps.increment_version.outputs.new_version }}
