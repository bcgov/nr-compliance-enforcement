name: Handle Version Bump

# on:
#   issue_comment:
#     types: [created, edited]

on:
  push:
    branches:
      - "CE-1476-tagging-actions"

jobs:
  bump_and_merge:
    name: Handle Version Bump
    runs-on: ubuntu-22.04
    permissions:
      contents: "write"
      packages: "write"
      actions: "read"
    if: ${{ github.event.issue.pull_request }} && ${{ contains(github.event.comment.body, '/version') }}
    steps:
      - name: Get PR Details
        id: pr_details
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_DATA=$(gh api /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }})
          echo "ref=$(echo $PR_DATA | jq -r .head.ref)" >> $GITHUB_OUTPUT

      - name: Authenticate GitHub App and Get Token
        id: get_gh_app_token
        uses: ./.github/actions/get-gh-app-token
        with:
          github_app_id: ${{ vars.TEAM_WOLVERINE_GITHUB_APP_ID }}
          github_app_private_key: ${{ secrets.TEAM_WOLVERINE_GITHUB_APP_PRIVATE_KEY }}
          ref: ${{ steps.pr_details.outputs.ref }}

      - name: Update package.json versions
        id: increment_version
        # The old and new versions are currently being read from the frontend package.json
        # since all three packages are being kept in sync.
        run: |
          cd frontend
          echo "::set-output name=old_version::$(npm pkg get version | tr -d '"')"
          npm version patch --no-git-tag-version
          echo "::set-output name=new_version::$(npm pkg get version | tr -d '"')"
          new_v=$(npm pkg get version | tr -d '"')
          echo "Frontend package.json version updated to $new_v"
          cd ../backend
          npm version $new_v --no-git-tag-version
          echo "Backend package.json version updated to $new_v"
          cd ../webeoc
          npm version $new_v --no-git-tag-version
          echo "WebEOC package.json version updated to $new_v"
          cd ..
      - name: Update helm chart version and appVersion in Chart.yaml
        run: |
          sed -i'' -e 's/^version:.*$/version: ${{ steps.increment_version.outputs.new_version }}/' charts/app/Chart.yaml
          sed -i'' 's/^appVersion:.*$/appVersion: ${{ steps.increment_version.outputs.new_version }}/' charts/app/Chart.yaml
      - name: Commit and Push Version Update
        env:
          GH_TOKEN: ${{ steps.get_gh_app_token.outputs.token }}
        run: |
          git add frontend/package.json backend/package.json webeoc/package.json charts/app/Chart.yaml
          git commit -m "chore: bump version to ${{ steps.increment_version.outputs.new_version }}"
          git push origin HEAD:refs/pull/${{ github.event.issue.number }}/head
      - name: Create Git Tag and Delete Old Tag
        env:
          GH_TOKEN: ${{ steps.get_gh_app_token.outputs.token }}
        run: |
          git tag "v${{ steps.increment_version.outputs.new_version }}"
          git push origin v${{ steps.increment_version.outputs.new_version }}
          git push --delete origin "v${{ steps.increment_version.outputs.old_version }}"
