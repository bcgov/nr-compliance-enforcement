name: .Tests
permissions:
  contents: read
on:
  workflow_call:
    inputs:
      ### Required
      target:
        description: PR number, test or prod
        required: true
        type: string

      ### Typical / recommended
      triggers:
        description: Bash array to diff for build triggering; omit to always fire
        required: false
        type: string

env:
  DOMAIN: apps.silver.devops.gov.bc.ca
  PREFIX: ${{ github.event.repository.name }}-${{ inputs.target }}

jobs:
  zap-scan-fe:
    runs-on: ubuntu-latest
    name: ZAP Scan - Front End
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ inputs.target }}
    steps:
      - name: ZAP Scan - Frontend
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          allow_issue_writing: false
          artifact_name: "zap_frontend"
          cmd_options: "-a"
          issue_title: "ZAP: Frontend"
          target: https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}
      - name: Check for Front End High Risk Alerts
        run: |
          HIGH_RISK_COUNT=$(jq '[.site[].alerts[] | select(.riskcode == "3")] | length' report_json.json)
          if [ "$HIGH_RISK_COUNT" -gt 0 ]; then
            echo "High risk issues found in front end: $HIGH_RISK_COUNT"
            exit 1
          else
            echo "No high risk issues found."
          fi
  zap-scan-be:
    runs-on: ubuntu-latest
    name: ZAP Scan - Back End
    needs: zap-scan-fe
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ inputs.target }}
    steps:
      - name: ZAP Scan - Backend
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          allow_issue_writing: false
          artifact_name: "zap_backend"
          cmd_options: "-a"
          issue_title: "ZAP: Backend"
          target: https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }}/api
      - name: Check for Back End High Risk Alerts
        run: |
          HIGH_RISK_COUNT=$(jq '[.site[].alerts[] | select(.riskcode == "3")] | length' report_json.json)
          if [ "$HIGH_RISK_COUNT" -gt 0 ]; then
            echo "High risk issues found in back end: $HIGH_RISK_COUNT"
            exit 1
          else
            echo "No high risk issues found."
          fi
  cypress-tests:
    env:
      DOMAIN: apps.silver.devops.gov.bc.ca
      PREFIX: ${{ github.event.repository.name }}-${{ inputs.target }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitCode
        uses: actions/checkout@v3

      - name: Debug secrets
        run: |
          echo "Checking secrets..."
          echo "auth_base_url: ${{ vars.KEYCLOAK_URL_DEV }}"
          echo "auth_realm: ${{ vars.KEYCLOAK_REALM }}"
          echo "keycloak_user: ${{ vars.KEYCLOAK_USER }}"
          echo "keycloak_client_id: ${{ vars.KEYCLOAK_CLIENT_ID }}"

        env:
          KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}

      - name: Run Cypress Test
        uses: cypress-io/github-action@v5
        with:
          working-directory: ./frontend
          command: npx cypress run --browser electron --config baseUrl=https://${{ env.PREFIX }}-frontend.${{ env.DOMAIN }} --env auth_base_url=${{ vars.KEYCLOAK_URL_DEV }},auth_realm=${{ vars.KEYCLOAK_REALM }},auth_client_id=${{ vars.KEYCLOAK_CLIENT_ID }},keycloak_user=${{ vars.KEYCLOAK_USER }},keycloak_user_02=${{ vars.KEYCLOAK_USER_02 }},keycloak_user_03=${{ vars.KEYCLOAK_USER_03 }},keycloak_password=${{ secrets.KEYCLOAK_PASSWORD }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-artifacts
          path: |-
            /home/runner/work/nr-compliance-enforcement/nr-compliance-enforcement/frontend/cypress/videos/
            /home/runner/work/nr-compliance-enforcement/nr-compliance-enforcement/frontend/cypress/screenshots/
  playwright-tests:
    name: "Playwright Tests"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Debug secrets
        run: |
          echo "Checking secrets..."
          echo "auth_base_url: ${{ vars.E2E_BASE_URL }}"
          echo "auth_realm: ${{ vars.KEYCLOAK_REALM }}"
          echo "keycloak_user_01: ${{ vars.KEYCLOAK_USER }}"
          echo "keycloak_user_02: ${{ vars.PLAYWRIGHT_KEYCLOAK_USER_02 }}"
          echo "keycloak_user_03: ${{ vars.PLAYWRIGHT_KEYCLOAK_USER_03 }}"
          echo "keycloak_password: ${{ secrets.KEYCLOAK_PASSWORD }}"
          echo "keycloak_client_id: ${{ vars.KEYCLOAK_CLIENT_ID }}"
        env:
          KEYCLOAK_PASSWORD: ${{ secrets.KEYCLOAK_PASSWORD }}
          E2E_BASE_URL: ${{ vars.E2E_BASE_URL }}
          KEYCLOAK_REALM: ${{ vars.KEYCLOAK_REALM }}
          KEYCLOAK_USER: ${{ vars.KEYCLOAK_USER }}
          PLAYWRIGHT_KEYCLOAK_USER_02: ${{ vars.PLAYWRIGHT_KEYCLOAK_USER_02 }}
          PLAYWRIGHT_KEYCLOAK_USER_03: ${{ vars.PLAYWRIGHT_KEYCLOAK_USER_03 }}
          KEYCLOAK_CLIENT_ID: ${{ vars.KEYCLOAK_CLIENT_ID }}
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: /home/runner/work/nr-compliance-enforcement/nr-compliance-enforcement/frontend/playwright-report
