name: Get GitHub App Access Token
description: Get an access token for the GitHub app to perform authenticated API requests with
branding:
  icon: shield
  color: blue

inputs:
  github_app_id:
    description: Provide the id of the GitHub app
  github_app_private_key:
    description: Provide the base-64 encoded private key for the GitHub app specified in github_app_id
  ref:
    description: Provide the ref to checkout to

outputs:
  token:
    description: "Access token for the GitHub app"
    value: ${{ steps.app_token.outputs.token }}
  app_slug:
    description: "Slug of the GitHub app"
    value: ${{ steps.app_token.outputs.app_slug }}

runs:
  using: composite
  permissions:
    contents: "write"
    packages: "write"
    actions: "read"
  steps:
    - name: Decode the GitHub App Private Key
      id: decode_app_private_key
      shell: bash
      run: |
        private_key=$(echo "${{ inputs.github_app_private_key }}" | base64 -d | awk 'BEGIN {ORS="\\n"} {print}' | head -c -2) &> /dev/null
        echo "::add-mask::$private_key"
        echo "app_private_key=$private_key" >> "$GITHUB_OUTPUT"

    - uses: actions/create-github-app-token@v1
      id: app_token
      with:
        app-id: ${{ inputs.github_app_id }}
        private-key: ${{ steps.decode_app_private_key.outputs.app_private_key }}

    - uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
        fetch-depth: 0
        fetch-tags: true
        token: ${{ steps.app_token.outputs.token }}

    - name: Get GitHub App User ID
      id: get_user_id
      run: echo "user_id=$(gh api "/users/${{ steps.app_token.outputs.app_slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ steps.app_token.outputs.token }}
    - run: |
        git config --global user.name '${{ steps.app_token.outputs.app_slug }}[bot]'
        git config --global user.email '${{ steps.get_user_id.outputs.user_id }}+${{ steps.app_token.outputs.app_slug }}[bot]@users.noreply.github.com'
