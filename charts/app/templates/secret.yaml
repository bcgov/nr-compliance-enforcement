{{- if and .Values.global.secrets .Values.global.secrets.enabled}}
{{- $databaseUser := .Values.global.secrets.databaseUser| default "postgres"  }}
{{- $databasePassword := .Values.global.secrets.databasePassword | default (randAlphaNum 10) }}
{{- $caseManagementApiKey := .Values.global.secrets.caseManagementApiKey | default (randAlphaNum 10) }}
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace  .Release.Name ) | default dict }}
{{- $secretData := (get $secretObj "data") | default dict }}
  # set below to existing secret data or generate a random one when not exists
{{- $databasePassword = (get $secretData "databasePassword") | default ($databasePassword | b64enc) }}
{{- $databaseName := .Values.global.secrets.databaseName| default "postgres" }}
{{- $host := printf "%s-%s:5432" .Release.Name .Values.global.databaseAlias }}
{{- $hostWithoutPort := printf "%s-%s" .Release.Name .Values.global.databaseAlias }}
{{- $databaseURL := printf "postgresql://%s:%s@%s/%s" $databaseUser (b64dec $databasePassword) $host $databaseName }}
{{- $databaseJDBCURL := printf "jdbc:postgresql://%s:%s@%s/%s" $databaseUser (b64dec $databasePassword) $host $databaseName }}
{{- $databaseJDBCURLNoCreds := printf "jdbc:postgresql://%s/%s" $host $databaseName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-backend
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  # BACKEND Secrets
  POSTGRES_PASSWORD: {{ $databasePassword | quote }}
  POSTGRES_USER: {{ $databaseUser | b64enc | quote }}
  POSTGRES_DATABASE: {{ $databaseName | b64enc | quote }}
  POSTGRES_HOST: {{ $hostWithoutPort | b64enc | quote }}
  JWKS_URI: {{ .Values.global.secrets.jwksUri | b64enc | quote }}
  JWT_ISSUER: {{ .Values.global.secrets.jwtIssuer | b64enc | quote }}
  KEYCLOCK_CLIENT_ID: {{ .Values.global.secrets.keycloakClientId | b64enc | quote }}
  BC_GEOCODER_API_CLIENT_ID: {{ .Values.global.secrets.bcGeocoderApiClientId | b64enc | quote }}
  BC_GEOCODER_API_KEY: {{ .Values.global.secrets.bcGeocoderApiKey | b64enc | quote }}
  BC_GEOCODER_API_URL: {{ .Values.global.secrets.bcGeocoderApiUrl | b64enc | quote }}
  CASE_MANAGEMENT_API_URL: {{ .Values.global.secrets.caseManagementApiUrl | b64enc | quote }}
  COMPLAINTS_API_KEY: {{ $caseManagementApiKey | b64enc | quote }}
  POSTGRESQL_ENABLE_LOGGING: {{ .Values.global.secrets.postgresqlEnableLogging | b64enc | quote }}
  COMS_JWT_AUTH_URI: {{ .Values.global.secrets.comsJwtAuthUri | b64enc | quote }}
  CDOGS_URI: {{ .Values.global.secrets.cdogsUri | b64enc | quote }}
  CDOGS_CLIENT_ID: {{ .Values.global.secrets.cdogsClientId | b64enc | quote }}
  CDOGS_CLIENT_SECRET: {{ .Values.global.secrets.cdogsClientSecret | b64enc | quote }}
  # WEBEOC Secrets
  WEBEOC_USERNAME: {{ .Values.global.secrets.webeocUsername | b64enc | quote }}
  WEBEOC_PASSWORD: {{ .Values.global.secrets.webeocPassword | b64enc | quote }}
  WEBEOC_POSITION: {{ .Values.global.secrets.webeocPosition | b64enc | quote }}
  WEBEOC_INCIDENT: {{ .Values.global.secrets.webeocIncident | b64enc | quote }}
  WEBEOC_URL: {{ .Values.global.secrets.webeocUrl | b64enc | quote }}
  WEBEOC_COMPLAINT_HISTORY_SECONDS: {{ .Values.global.secrets.webeocComplaintHistorySeconds | b64enc | quote }}
  WEBEOC_CRON_EXPRESSION: {{ .Values.global.secrets.webeocCronExpression | b64enc | quote }}
  NATS_HOST: {{ .Values.global.secrets.natsHost | b64enc | quote }}
  COMPLAINTS_MANAGEMENT_API_URL: {{ .Values.global.secrets.complaintsManagementApiUrl | b64enc | quote }}
  # BACKUP Secrets
  BACKUP_DIR: {{ .Values.global.secrets.backupDir | b64enc | quote }}
  BACKUP_STRATEGY: {{ .Values.global.secrets.backupStrategy | b64enc | quote }}
  NUM_BACKUPS: {{ .Values.global.secrets.numBackups | b64enc | quote }}
  DAILY_BACKUPS: {{ .Values.global.secrets.dailyBackups | b64enc | quote }}
  WEEKLY_BACKUPS: {{ .Values.global.secrets.weeklyBackups | b64enc | quote }}
  MONTHLY_BACKUPS: {{ .Values.global.secrets.monthlyBackups | b64enc | quote }}
  DATABASE_SERVICE_NAME: {{ .Values.global.secrets.databaseServiceName | b64enc | quote }}
  OBJECTSTORE_ACCESS_KEY: {{ .Values.global.secrets.objectstoreAccessKey | b64enc | quote }}
  OBJECTSTORE_URL: {{ .Values.global.secrets.objectstoreUrl | b64enc | quote }}
  OBJECTSTORE_BACKUP_DIRECTORY: {{ .Values.global.secrets.objectstoreBackupDirectory | b64enc | quote }}
  OBJECTSTORE_BUCKET: {{ .Values.global.secrets.objectstoreBucket | b64enc | quote }}
  OBJECTSTORE_SECRET_KEY: {{ .Values.global.secrets.objectstoreSecretKey | b64enc | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-flyway
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  FLYWAY_URL: {{ $databaseJDBCURLNoCreds | b64enc | quote }}
  FLYWAY_USER: {{ $databaseUser | b64enc | quote }}
  FLYWAY_PASSWORD: {{ $databasePassword | quote }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-database
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  postgres-password: {{ $databasePassword  | quote }}
  password: {{ $databasePassword | quote }}
{{- end }}
