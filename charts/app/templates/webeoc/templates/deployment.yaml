{{- if .Values.webeoc.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webeoc.fullname" . }}
  labels:
    {{- include "webeoc.labels" . | nindent 4 }}
spec:
  automountServiceAccountToken: false
  strategy:
    type: {{ .Values.webeoc.deploymentStrategy }}
  {{- if not .Values.webeoc.autoscaling.enabled }}
  replicas: {{ .Values.webeoc.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "webeoc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        {{- include "webeoc.labels" . | nindent 8 }}
    spec:
      volumes:
        - name: {{ include "webeoc.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "webeoc.fullname" . }}
      automountServiceAccountToken: false
      {{- if .Values.webeoc.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.webeoc.podSecurityContext | nindent 12 }}
      {{- end }}
      containers:
        - name: {{ include "webeoc.fullname" . }}
          {{- if .Values.webeoc.securityContext }}
          securityContext:
            {{- toYaml .Values.webeoc.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.global.registry }}/{{ .Values.global.repository }}/webeoc:{{ .Values.global.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ default "Always" .Values.webeoc.imagePullPolicy }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-webeoc
          env:
            - name: LOG_LEVEL
              value: info
            - name: NODE_TLS_REJECT_UNAUTHORIZED
              value: "0"
            - name: NATS_HOST
              value: nats://{{ .Release.Name }}-nats:4222
            - name: COMPLAINTS_MANAGEMENT_API_URL
              value: https://{{ .Release.Name }}-frontend.apps.silver.devops.gov.bc.ca/api/v1
          volumeMounts:
            - name: {{ include "webeoc.fullname" . }}
              mountPath: /app/mnt
          ports:
            - name: http
              containerPort: {{ .Values.webeoc.service.targetPort }}
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: {{ .Values.webeoc.service.targetPort }}
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 30
          livenessProbe:
            successThreshold: 1
            failureThreshold: 3
            tcpSocket:
              port: {{ .Values.webeoc.service.targetPort }}
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 5
          resources: # this is optional
            limits:
              ephemeral-storage: "25Mi"
              cpu: 80m
              memory: 150Mi
            requests:
              ephemeral-storage: "15Mi"
              cpu: 40m
              memory: 75Mi
      {{- with .Values.webeoc.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webeoc.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ include "webeoc.fullname" . }}
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"

{{- end }}
