---
version: "3.8"

services:
  database:
    build:
      context: database
    container_name: database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: default
      POSTGRES_DB: postgres
    hostname: database
    restart: always
    user: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 15s
      timeout: 5s
      retries: 3
    volumes:
      - /pgdata
  database-migrations:
    image: flyway/flyway:9.10-alpine
    container_name: backend-migrations
    command:
      - info
      - migrate
      - -outOfOrder=true
    volumes:
      - "./migrations:/flyway/sql"
      - "./test-only-migrations:/flyway/sql-test"
    environment:
      - FLYWAY_URL=jdbc:postgresql://database:5432/postgres
      - FLYWAY_USER=postgres
      - FLYWAY_PASSWORD=default
      - FLYWAY_BASELINE_ON_MIGRATE=true
      - FLYWAY_DEFAULT_SCHEMA=public
      - FLYWAY_LOCATIONS=filesystem:./sql, filesystem:./sql-test
    depends_on:
      database:
        condition: service_healthy
  backend:
    container_name: backend
    entrypoint:
      - "sh"
      - "-c"
      - "npm i && npm run start"
    environment:
      NODE_ENV: development
      POSTGRESQL_HOST: database
      POSTGRESQL_USER: postgres
      POSTGRESQL_PASSWORD: default
      POSTGRESQL_DATABASE: postgres
    hostname: backend
    image: registry.access.redhat.com/ubi8/nodejs-18-minimal@sha256:dfaa7bbc56a7fb02046d2e89e74a65693c522d8e25d4f318c676f0ad15e67168
    links:
      - database
    ports:
      - "3001:3000"
    volumes:
      - ./backend:/app:z
      - /app/node_modules
    user: root
    working_dir: "/app"
    depends_on:
      database:
        condition: service_healthy
      database-migrations:
        condition: service_started
  frontend:
    container_name: frontend
    entrypoint:
      - "sh"
      - "-c"
      - "chown -R root . && npm ci && npm run start"
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_ENVIRONMENT_NAME: DEVELOPMENT
    hostname: frontend
    image: registry.access.redhat.com/ubi8/nodejs-18-minimal@sha256:dfaa7bbc56a7fb02046d2e89e74a65693c522d8e25d4f318c676f0ad15e67168
    links:
      - backend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:z
      - /app/node_modules
    user: root
    working_dir: "/app"
  nats:
    image: nats:latest # Using the latest official NATS image
    command:
      - "-js"
      - "-DVV"
    ports:
      - "4222:4222" # Default NATS client port
      - "8222:8222" # NATS monitoring port
    environment:
      - NATS_USER=natsuser # this is just for the developer instance of nats
      - NATS_PASSWORD=natspass # this is just for the developer instance of nats
  webeoc:
    container_name: webeoc
    entrypoint:
      - "sh"
      - "-c"
      - "npm i && npm run start"
    hostname: webeoc
    image: registry.access.redhat.com/ubi8/nodejs-18-minimal@sha256:dfaa7bbc56a7fb02046d2e89e74a65693c522d8e25d4f318c676f0ad15e67168
    links:
      - nats
    ports:
      - "3002:3000"
    volumes:
      - ./webeoc:/app:z
      - /app/node_modules
    user: root
    working_dir: "/app"
