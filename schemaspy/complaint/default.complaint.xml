<?xml version="1.0" encoding="UTF-8"?><database name="default" schema="complaint" type="PostgreSQL - 16.4 (Debian 16.4-1.pgdg110+2)">
   <sequences>
      <sequence increment="1" name="complaint_sequence" startValue="40000"/>
   </sequences>
   <tables>
      <table name="action_taken" remarks="Contains information about who the call centre staff contacted and when to allow Officers to know who to follow up with and/or if someone else is already taking action." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="action_taken_guid" nullable="false" remarks="System generated unique key for an action taken record.  This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="complaint_identifier" nullable="true" remarks="Natural key for a complaint generated by webEOC.  Format is YY-###### where the number portion of the sequence resets to 0 on the new year.  Either a complaint_update_guid or a complaint_identifier must be present on the record." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="Implied Constraint" implied="true" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="complaint_update_guid" nullable="true" remarks="System generated unique key for a COMPLAINT_UPDATE.  This key should never be exposed to users via any system utilizing the tables.   Either a complaint_update_guid or a complaint_identifier must be present on the record." size="2147483647" type="uuid" typeCode="1111">
            <parent column="complaint_update_guid" foreignKey="Implied Constraint" implied="true" onDeleteCascade="false" schema="complaint" table="complaint_update"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="action_details_txt" nullable="true" remarks="Text about who the call centre staff contacted and when" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="logged_by_txt" nullable="true" remarks="The name of the webEOC User that recorded the ACTION_TAKEN" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="action_utc_timestamp" nullable="true" remarks="The date from webEOC that the ACTION_TAKEN was recorded.   The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="create_user_id" nullable="false" remarks="The id of the user that created the ACTION_TAKEN" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the ACTION_TAKEN was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="update_user_id" nullable="false" remarks="The id of the user that updated the ACTION_TAKEN" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="9" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the ACTION_TAKEN was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="action_taken_guid" sequenceNumberInPK="1"/>
         <index name="PK_action_taken_guid" unique="true">
            <column ascending="true" name="action_taken_guid"/>
         </index>
         <checkConstraint constraint="(((complaint_identifier IS NOT NULL) OR (complaint_update_guid IS NOT NULL)))" name="action_taken_check"/>
      </table>
      <table name="action_taken_h" remarks="History table for complaint table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_action_taken_guid" nullable="false" remarks="System generated unique key for complaint history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the complaint that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the complaint table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the complaint table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_action_taken_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_action_taken_guid" unique="true">
            <column ascending="true" name="h_action_taken_guid"/>
         </index>
      </table>
      <table name="allegation_complaint" remarks="A complaint for which a caller believes that a Violation has occurred and should be investigated." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="allegation_complaint_guid" nullable="false" remarks="System generated unique key for an allegation complaint. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="in_progress_ind" nullable="false" remarks="True if the alleged violation is currently described as being in progress.  False otherwise." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="observed_ind" nullable="false" remarks="True if the alleged violation was observed first hand.  False otherwise." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="suspect_witnesss_dtl_text" nullable="true" remarks="" size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the allegation complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the allegation complaint was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="The id of the user that updated the allegation complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the allegation complaint was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="complaint_identifier" nullable="false" remarks="Natural key for a complaint generated by webEOC." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="FK_algtncmplt_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="violation_code" nullable="true" remarks="A human readable code used to identify a violation." size="10" type="varchar" typeCode="12">
            <parent column="violation_code" foreignKey="FK_algtncmplt_violatncd" implied="false" onDeleteCascade="false" schema="complaint" table="violation_code"/>
         </column>
         <primaryKey column="allegation_complaint_guid" sequenceNumberInPK="1"/>
         <index name="PK_algtncmplt" unique="true">
            <column ascending="true" name="allegation_complaint_guid"/>
         </index>
         <index name="UQ_algtncmplt" unique="true">
            <column ascending="true" name="complaint_identifier"/>
         </index>
      </table>
      <table name="allegation_complaint_h" remarks="History table for allegation_complaint table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_algtncmplt_guid" nullable="false" remarks="System generated unique key for allegation complaint history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the allegation complaint that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the allegation complaint table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the allegation complaint table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_algtncmplt_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_algtncmplt" unique="true">
            <column ascending="true" name="h_algtncmplt_guid"/>
         </index>
      </table>
      <table name="attractant_code" remarks="A human factor contributing to a Human Wildlife Conflict (E.g. RESFRUIT = Residential Fruit/Berries; LVSFEED = Livestock Feed)" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="attractant_code" nullable="false" remarks="A human readable code used to identify an attractant." size="10" type="varchar" typeCode="12">
            <child column="attractant_code" foreignKey="FK_attrhwcrx_atractntcd" implied="false" onDeleteCascade="false" schema="complaint" table="attractant_hwcr_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the attractant code." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the attractant code." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of the attractant code table should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the attractant code is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the attractant code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the attractant code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the attractant code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the attractant code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="attractant_code" sequenceNumberInPK="1"/>
         <index name="PK_atractntcd" unique="true">
            <column ascending="true" name="attractant_code"/>
         </index>
      </table>
      <table name="attractant_hwcr_xref" remarks="Cross reference table for linking attractants to HWCR Complaints." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="attractant_hwcr_xref_guid" nullable="false" remarks="System generated unique key for an attractant hwcr relationship. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="attractant_code" nullable="false" remarks="A human readable code used to identify an attractant." size="10" type="varchar" typeCode="12">
            <parent column="attractant_code" foreignKey="FK_attrhwcrx_atractntcd" implied="false" onDeleteCascade="false" schema="complaint" table="attractant_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="hwcr_complaint_guid" nullable="false" remarks="System generated unique key for a hwcr complaint." size="2147483647" type="uuid" typeCode="1111">
            <parent column="hwcr_complaint_guid" foreignKey="FK_attrhwcrx_hwcrcmplnt" implied="false" onDeleteCascade="false" schema="complaint" table="hwcr_complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="create_user_id" nullable="false" remarks="The id of the user that created the attractant hwcr cross reference." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="4" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the attractant hwcr cross reference was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="update_user_id" nullable="false" remarks="The id of the user that updated the attractant hwcr cross reference." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the attractant hwcr cross reference was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="true" digits="0" id="7" name="active_ind" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <primaryKey column="attractant_hwcr_xref_guid" sequenceNumberInPK="1"/>
         <index name="PK_attrhwcrx" unique="true">
            <column ascending="true" name="attractant_hwcr_xref_guid"/>
         </index>
         <index name="FK_hwcrcmplntguid" unique="false">
            <column ascending="true" name="hwcr_complaint_guid"/>
         </index>
      </table>
      <table name="attractant_hwcr_xref_h" remarks="History table for attractant_hwcr_xref table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_attrhwcrx_guid" nullable="false" remarks="System generated unique key for attractant hwcr xref history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the attractant hwcr xref that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the attractant hwcr xref table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the attractant hwcr xref table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_attrhwcrx_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_attrhwcrx" unique="true">
            <column ascending="true" name="h_attrhwcrx_guid"/>
         </index>
      </table>
      <table name="comp_mthd_recv_cd_agcy_cd_xref" remarks="complaint_method_received_code and AGENCIES that allow for features to be displayed or hidden as required." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="comp_mthd_recv_cd_agcy_cd_xref_guid" nullable="false" remarks="" size="2147483647" type="uuid" typeCode="1111">
            <child column="comp_mthd_recv_cd_agcy_cd_xref_guid" foreignKey="complaint_comp_mthd_recv_cd_agcy_cd_xref_fk" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="agency_code_ref" nullable="false" remarks="Key representing an agency stored in the agency_code table of the shared schema.  Used to map methods complaints are received to NatSuite agencies as the users were not able to standardize on a common list." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="complaint_method_received_code" nullable="false" remarks="A human readable code used to identify a complaint_method_received_code that is controlled by the comp_mthd_recv_cd_agcy_cd_xref table." size="10" type="varchar" typeCode="12">
            <parent column="complaint_method_received_code" foreignKey="FK_comp_mthd_recv_cd_agcy_cd_xref_complaint_method_received_cod" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_method_received_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the complaint_method_received_code should be rendered the for users in the given AGENCY" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the complaint_method_received_code / AGENCY mapping." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the complaint_method_received_code / AGENCY mapping was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="The id of the user that updated the complaint_method_received_code / AGENCY mapping" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the complaint_method_received_code / AGENCY mapping was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="comp_mthd_recv_cd_agcy_cd_xref_guid" sequenceNumberInPK="1"/>
         <index name="PK_comp_mthd_recv_cd_agcy_cd_xref" unique="true">
            <column ascending="true" name="comp_mthd_recv_cd_agcy_cd_xref_guid"/>
         </index>
         <index name="UK_comp_mthd_recv_cd_agcy_cd_xref" unique="true">
            <column ascending="true" name="agency_code_ref"/>
            <column ascending="true" name="complaint_method_received_code"/>
         </index>
      </table>
      <table name="complaint" remarks="Initial information provided on a potential incident." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="complaint_identifier" nullable="false" remarks="" size="20" type="varchar" typeCode="12">
            <child column="complaint_identifier" foreignKey="Implied Constraint" implied="true" onDeleteCascade="false" schema="complaint" table="action_taken"/>
            <child column="complaint_identifier" foreignKey="FK_algtncmplt_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="allegation_complaint"/>
            <child column="complaint_identifier" foreignKey="FK_cmplreferral__complaint" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_referral"/>
            <child column="complaint_identifier" foreignKey="complaint_update_fk" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_update"/>
            <child column="complaint_identifier" foreignKey="FK_gircmplnt_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="gir_complaint"/>
            <child column="complaint_identifier" foreignKey="FK_hwcrcmplnt_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="hwcr_complaint"/>
            <child column="complaint_identifier" foreignKey="FK_lnkcmplxref_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="linked_complaint_xref"/>
            <child column="linked_complaint_identifier" foreignKey="FK_lnkcmplxref_linked_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="linked_complaint_xref"/>
            <child column="complaint_identifier" foreignKey="FK_person_complaint_xref__complaint_identifier" implied="false" onDeleteCascade="false" schema="complaint" table="person_complaint_xref"/>
            <child column="complaint_identifier" foreignKey="Implied Constraint" implied="true" onDeleteCascade="false" schema="complaint" table="staging_complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="detail_text" nullable="true" remarks="Verbatim details of the complaint as recorded by the call centre or through the web form." size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="caller_name" nullable="true" remarks="The name provided by the caller to the call centre or entered onto the web form." size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="caller_address" nullable="true" remarks="The address provided by the caller to the call centre or entered onto the web form." size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="caller_email" nullable="true" remarks="The email address provided by the caller to the call centre or entered onto the web form." size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="caller_phone_1" nullable="true" remarks="The primary phone number provided by the caller to the call centre or entered onto the web form." size="15" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="caller_phone_2" nullable="true" remarks="An alternate phone number provided by the caller to the call centre or entered onto the web form." size="15" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="caller_phone_3" nullable="true" remarks="An alternate phone number provided by the caller to the call centre or entered onto the web form." size="15" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="location_summary_text" nullable="true" remarks="A brief summary of the location of the complaint." size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="location_detailed_text" nullable="true" remarks="A more detailed description of the location of the complaint." size="4000" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="10" name="incident_utc_datetime" nullable="true" remarks="The date and time at which the complaint occurred." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="11" name="incident_reported_utc_timestmp" nullable="true" remarks="The date and time at which the complaint was reported." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="12" name="reported_by_other_text" nullable="true" remarks="Provides a more detailed description when the referred by Agency is of type &quot;OTHER&quot;" size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="13" name="create_user_id" nullable="false" remarks="The id of the user that created the complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="14" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the complaint was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="15" name="update_user_id" nullable="false" remarks="The id of the user that updated the complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="16" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the complaint was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="17" name="reported_by_code" nullable="true" remarks="A human readable code used to identify an agency.  The agency that originally referred the complaint." size="10" type="varchar" typeCode="12">
            <parent column="reported_by_code" foreignKey="FK_complaint_reported_by_code" implied="false" onDeleteCascade="false" schema="complaint" table="reported_by_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="18" name="owned_by_agency_code_ref" nullable="true" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency that currently owns the complaint." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="19" name="complaint_status_code" nullable="true" remarks="A human readable code used to identify a complaint status." size="10" type="varchar" typeCode="12">
            <parent column="complaint_status_code" foreignKey="FK_complaint_compntstscd" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_status_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="20" name="geo_organization_unit_code" nullable="true" remarks="A human readable code used to identify a geographical organization unit.   The finest known grain geographical organization unit where the complaint occurred." size="10" type="varchar" typeCode="12">
            <parent column="geo_organization_unit_code" foreignKey="FK_complaint_geoorgutnd" implied="false" onDeleteCascade="false" schema="complaint" table="geo_organization_unit_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="21" name="location_geometry_point" nullable="true" remarks="The closest approximation to where the incident occurred. Stored as a geometric point using the EPSG:3005 Projected Coordinate System (BC Albers)" size="2147483647" type="geometry" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="22" name="webeoc_identifier" nullable="true" remarks="Unique Identifier from the webEOC source system to identify a complaint update.   This is required as the natural key is not available in all webEOC APIs" size="20" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="23" name="comp_mthd_recv_cd_agcy_cd_xref_guid" nullable="true" remarks="Methods in which the complaint was received.  Examples include: DGIR forward, Direct email or phone call,Minister's office,RAPP ,Referral" size="2147483647" type="uuid" typeCode="1111">
            <parent column="comp_mthd_recv_cd_agcy_cd_xref_guid" foreignKey="complaint_comp_mthd_recv_cd_agcy_cd_xref_fk" implied="false" onDeleteCascade="false" schema="complaint" table="comp_mthd_recv_cd_agcy_cd_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="'U'::bpchar" digits="0" id="24" name="is_privacy_requested" nullable="true" remarks="flag to represent that the caller has asked for special care when handling their personal information" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="25" name="reference_number" nullable="true" remarks="Allows users to link complaints to files in external systems.   Currently labeled in the system as COORS reference number and initially only used for COORS linkages." size="20" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="26" name="comp_last_upd_utc_timestamp" nullable="true" remarks="The time the complaint was last updated, or null if the complaint has never been touched.  This value might also be updated by business logic that touches sub-tables to indicate that the business object complaint has been updated." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="27" name="park_guid" nullable="true" remarks="" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="28" name="complaint_type_code" nullable="true" remarks="The type of the complaint, such as HWCR, GIR, or ERS." size="10" type="varchar" typeCode="12">
            <parent column="complaint_type_code" foreignKey="complaint_complaint_type_code_fkey" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_type_code"/>
         </column>
         <primaryKey column="complaint_identifier" sequenceNumberInPK="1"/>
         <index name="PK_complaint" unique="true">
            <column ascending="true" name="complaint_identifier"/>
         </index>
         <index name="IDX_adbfa452bdecec83d2daf17d18" unique="false">
            <column ascending="true" name="location_geometry_point"/>
         </index>
         <checkConstraint constraint="((is_privacy_requested = ANY (ARRAY['Y'::bpchar, 'N'::bpchar, 'U'::bpchar])))" name="complaint_is_privacy_requested"/>
      </table>
      <table name="complaint_h" remarks="History table for complaint table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_complaint_guid" nullable="false" remarks="System generated unique key for complaint history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the complaint that has been created or modified." size="20" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the complaint table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the complaint table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_complaint_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_complaint" unique="true">
            <column ascending="true" name="h_complaint_guid"/>
         </index>
      </table>
      <table name="complaint_method_received_code" remarks="Methods in which the complaint was received.  Examples include: DGIR forward, Direct email or phone call,Minister's office,RAPP ,Referral" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="complaint_method_received_code" nullable="false" remarks="A human readable code used to define the method in which the complaint was received" size="10" type="varchar" typeCode="12">
            <child column="complaint_method_received_code" foreignKey="FK_comp_mthd_recv_cd_agcy_cd_xref_complaint_method_received_cod" implied="false" onDeleteCascade="false" schema="complaint" table="comp_mthd_recv_cd_agcy_cd_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of a METHOD_COMPLAINT_RECEIVED_CODE" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of a METHOD_COMPLAINT_RECEIVED_CODE" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the METHOD_COMPLAINT_RECEIVED_CODE is active" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the wdr schedule code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the METHOD_COMPLAINT_RECEIVED_CODE was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the METHOD_COMPLAINT_RECEIVED_CODE." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the METHOD_COMPLAINT_RECEIVED_CODE was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="complaint_method_received_code" sequenceNumberInPK="1"/>
         <index name="PK_complaint_method_received_code" unique="true">
            <column ascending="true" name="complaint_method_received_code"/>
         </index>
      </table>
      <table name="complaint_referral" remarks="Used to track complaint refer actions from an agency to a different agency." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="complaint_referral_guid" nullable="false" remarks="System generated unique key for the referral action." size="2147483647" type="uuid" typeCode="1111">
            <child column="complaint_referral_guid" foreignKey="FK_refemailog__complaint_referral_guid" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_referral_email_log"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="complaint_identifier" nullable="false" remarks="A human readable code used to identify a complaint being referred." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="FK_cmplreferral__complaint" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="referred_by_agency_code_ref" nullable="false" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency that a complaint being referred from." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="referred_to_agency_code_ref" nullable="false" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency that a complaint is referred to." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="officer_guid" nullable="false" remarks="Unique key for an officer who refers a complaint. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111">
            <parent column="officer_guid" foreignKey="FK_cmplreferral__officer_guid" implied="false" onDeleteCascade="false" schema="complaint" table="officer"/>
         </column>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="5" name="referral_date" nullable="false" remarks="The timestamp when referring a complaint was created. The timestamp is stored in UTC with no offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="referral_reason" nullable="false" remarks="The reason why refer a complaint." size="500" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="create_user_id" nullable="false" remarks="The id of the user that refer a complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="8" name="create_utc_timestamp" nullable="false" remarks="The timestamp when referring a complaint was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="update_user_id" nullable="false" remarks="The id of the user that updated referring a complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="10" name="update_utc_timestamp" nullable="false" remarks="The timestamp when referring a complaint was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="true" digits="0" id="11" name="active_ind" nullable="false" remarks="A boolean indicator to determine if refer complaint feature is active." size="1" type="bool" typeCode="-7"/>
         <primaryKey column="complaint_referral_guid" sequenceNumberInPK="1"/>
         <index name="PK_cmplreferral" unique="true">
            <column ascending="true" name="complaint_referral_guid"/>
         </index>
      </table>
      <table name="complaint_referral_email_log" remarks="Used to track additional emails that were added to a specific complaint referral in order to maintain an audit trail.  This table does not track emails sent to the default email for an agency which is stored in the email reference table as this can be inferred from the complaint referral table." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="complaint_referral_email_log_guid" nullable="false" remarks="System generated unique key for the referral email log action." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="complaint_referral_guid" nullable="false" remarks="Foreign key to system generated unique key for the complaint referral." size="2147483647" type="uuid" typeCode="1111">
            <parent column="complaint_referral_guid" foreignKey="FK_refemailog__complaint_referral_guid" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_referral"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="email_address" nullable="false" remarks="An additional email address entered by a user that they have indicated the complaint should be referred to." size="256" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="3" name="email_sent_utc_timestamp" nullable="false" remarks="The date and time the email was sent.  The timestamp is stored in UTC with no Offset" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the email reference record." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when email reference was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="The id of the user that updated email reference." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when email reference was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="complaint_referral_email_log_guid" sequenceNumberInPK="1"/>
         <index name="PK_refemailog" unique="true">
            <column ascending="true" name="complaint_referral_email_log_guid"/>
         </index>
      </table>
      <table name="complaint_status_code" remarks="The status of a   Values include OPEN = Open and CLOSED = Closed." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="complaint_status_code" nullable="false" remarks="A human readable code used to identify a complaint status." size="10" type="varchar" typeCode="12">
            <child column="complaint_status_code" foreignKey="FK_complaint_compntstscd" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the complaint status code." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the complaint status code." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of the complaint status code table should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the complaint status code is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the complaint status code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the  complaint status code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the complaint status code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the complaint status code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="true" digits="0" id="9" name="manually_assignable_ind" nullable="false" remarks="Indicates if the stastus code can be manually assigned by a user." size="1" type="bool" typeCode="-7"/>
         <primaryKey column="complaint_status_code" sequenceNumberInPK="1"/>
         <index name="PK_cmpntstscd" unique="true">
            <column ascending="true" name="complaint_status_code"/>
         </index>
      </table>
      <table name="complaint_type_code" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="complaint_type_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <child column="complaint_type_code" foreignKey="complaint_complaint_type_code_fkey" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="create_user_guid" nullable="true" remarks="" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="create_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="update_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="update_user_guid" nullable="true" remarks="" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="10" name="update_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="'COS'::character varying" digits="0" id="11" name="agency_code_ref" nullable="false" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency that defines the complaint type" size="10" type="varchar" typeCode="12"/>
         <primaryKey column="complaint_type_code" sequenceNumberInPK="1"/>
         <index name="PK_complainttypecode" unique="true">
            <column ascending="true" name="complaint_type_code"/>
         </index>
      </table>
      <table name="complaint_update" remarks="Callers will sometimes call in with a COMPLAINT_UPDATE.   This table is used to track items that are considered to be amendments to the complaint information such as additional details, or location information." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="complaint_update_guid" nullable="false" remarks="System generated unique key for a complaint update.  This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111">
            <child column="complaint_update_guid" foreignKey="Implied Constraint" implied="true" onDeleteCascade="false" schema="complaint" table="action_taken"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="complaint_identifier" nullable="false" remarks="Natural key for a complaint generated by webEOC.  Format is YY-250744772125074477212507447721 where the number portion of the sequence resets to 0 on the new year." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="complaint_update_fk" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="update_seq_number" nullable="false" remarks="An integer that is used to reflect the order that complaint updates were entered into the call center system." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="upd_detail_text" nullable="true" remarks="Verbatim details of the complaint as recorded by the call centre or through the web form." size="2147483647" type="text" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="upd_location_summary_text" nullable="true" remarks="A brief summary of the location of the complaint." size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="upd_location_detailed_text" nullable="true" remarks="A more detailed description of the location of the complaint." size="4000" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="upd_location_geometry_point" nullable="true" remarks="The closest approximation to where the incident occurred.   Stored as a geometric point using the EPSG:3005 Projected Coordinate System (BC Albers)" size="2147483647" type="geometry" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="create_user_id" nullable="false" remarks="The id of the user that created the complaint update record." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the complaint update record was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="update_user_id" nullable="false" remarks="The id of the user that updated the complaint update record." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="10" name="update_utc_timestamp" nullable="true" remarks="The timestamp when the complaint_update record was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="11" name="webeoc_identifier" nullable="true" remarks="Unique Identifier from the webEOC source system to identify a complaint update.   This is required as the natural key is not available in all webEOC APIs" size="20" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="12" name="upd_caller_name" nullable="true" remarks="The name provided by the caller to the call centre or entered onto the web form." size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="13" name="upd_caller_phone_1" nullable="true" remarks="The primary phone number provided by the caller to the call centre or entered onto the web form." size="15" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="14" name="upd_caller_phone_2" nullable="true" remarks="An alternate phone number provided by the caller to the call centre or entered onto the web form." size="15" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="15" name="upd_caller_phone_3" nullable="true" remarks="An alternate phone number provided by the caller to the call centre or entered onto the web form." size="15" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="16" name="upd_caller_address" nullable="true" remarks="The address provided by the caller to the call centre or entered onto the web form." size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="17" name="upd_caller_email" nullable="true" remarks="The email address provided by the caller to the call centre or entered onto the web form." size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="18" name="upd_reported_by_code" nullable="true" remarks="A human readable code used to identify an agency.  The agency that originally referred the updated complaint." size="10" type="varchar" typeCode="12">
            <parent column="reported_by_code" foreignKey="fk_reported_by_code" implied="false" onDeleteCascade="false" schema="complaint" table="reported_by_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="19" name="upd_reported_by_other_text" nullable="true" remarks="Provides a more detailed description when the referred by Agency is of type &quot;OTHER&quot;" size="120" type="varchar" typeCode="12"/>
         <primaryKey column="complaint_update_guid" sequenceNumberInPK="1"/>
         <index name="complaint_update_pk" unique="true">
            <column ascending="true" name="complaint_update_guid"/>
         </index>
      </table>
      <table name="complaint_update_h" remarks="History table for complaint_update table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_complaint_update_guid" nullable="false" remarks="System generated unique key for complaint update history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the complaint update that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the complaint update table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the complaint update table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_complaint_update_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_complaint_update" unique="true">
            <column ascending="true" name="h_complaint_update_guid"/>
         </index>
      </table>
      <table name="configuration" remarks="The configuration table is used to store constants which are expected to change over the lifecycle of the application, or have different values in different environments.   By making changes to in the database the behaviour of the application can be altered without requiring a full deployment." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="configuration_code" nullable="false" remarks="A human readable code used to identify an configuration entry." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="configuration_value" nullable="false" remarks="The value of the configuration entry." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="false" remarks="The long description of the configuration entry." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the configuration_entry is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the configuration entry." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the configuration entry was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="The id of the user that updated the configuration entry." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="true" remarks="The timestamp when the configuration entry was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="configuration_code" sequenceNumberInPK="1"/>
         <index name="configuration_pk" unique="true">
            <column ascending="true" name="configuration_code"/>
         </index>
      </table>
      <table name="configuration_h" remarks="History table for configuration table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_configuration_guid" nullable="false" remarks="System generated unique key for configuration history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the configuration that has been created or modified." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the configuration table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the configuration table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_configuration_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_configuration" unique="true">
            <column ascending="true" name="h_configuration_guid"/>
         </index>
      </table>
      <table name="cos_geo_org_unit_flat_mvw" numRows="0" remarks="" schema="complaint" type="VIEW" viewSql=" SELECT DISTINCT gou.geo_organization_unit_code AS region_code,&#10;    gou.short_description AS region_name,&#10;    gou2.geo_organization_unit_code AS zone_code,&#10;    gou2.short_description AS zone_name,&#10;    gou3.geo_organization_unit_code AS offloc_code,&#10;    gou3.short_description AS offloc_name,&#10;    (COALESCE(gou4.geo_organization_unit_code, NULL::character varying))::character varying(10) AS area_code,&#10;    (COALESCE(gou4.short_description, NULL::character varying))::character varying(50) AS area_name,&#10;    gou3.administrative_office_ind&#10;   FROM (((((((complaint.geo_org_unit_structure gos&#10;     JOIN complaint.geo_organization_unit_code gou ON (((gos.parent_geo_org_unit_code)::text = (gou.geo_organization_unit_code)::text)))&#10;     JOIN complaint.geo_org_unit_structure gos2 ON (((gos2.parent_geo_org_unit_code)::text = (gou.geo_organization_unit_code)::text)))&#10;     JOIN complaint.geo_organization_unit_code gou2 ON (((gos2.child_geo_org_unit_code)::text = (gou2.geo_organization_unit_code)::text)))&#10;     JOIN complaint.geo_org_unit_structure gos3 ON (((gos3.parent_geo_org_unit_code)::text = (gou2.geo_organization_unit_code)::text)))&#10;     JOIN complaint.geo_organization_unit_code gou3 ON (((gos3.child_geo_org_unit_code)::text = (gou3.geo_organization_unit_code)::text)))&#10;     LEFT JOIN complaint.geo_org_unit_structure gos4 ON (((gos4.parent_geo_org_unit_code)::text = (gou3.geo_organization_unit_code)::text)))&#10;     LEFT JOIN complaint.geo_organization_unit_code gou4 ON (((gos4.child_geo_org_unit_code)::text = (gou4.geo_organization_unit_code)::text)))&#10;  WHERE (((gou.geo_org_unit_type_code)::text = 'REGION'::text) AND ((gou2.geo_org_unit_type_code)::text = 'ZONE'::text) AND ((gou3.geo_org_unit_type_code)::text = 'OFFLOC'::text) AND (((gou4.geo_org_unit_type_code)::text = 'AREA'::text) OR (gou4.geo_org_unit_type_code IS NULL)) AND ((gos.agency_code_ref)::text = 'COS'::text));">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="region_code" nullable="true" remarks="" size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="region_name" nullable="true" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="zone_code" nullable="true" remarks="" size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="zone_name" nullable="true" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="offloc_code" nullable="true" remarks="" size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="offloc_name" nullable="true" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="area_code" nullable="true" remarks="" size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="area_name" nullable="true" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="administrative_office_ind" nullable="true" remarks="" size="1" type="bool" typeCode="-7"/>
      </table>
      <table name="email_reference" remarks="Used to track shared email addresses used by various agencies." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="email_reference_guid" nullable="false" remarks="System generated unique key for the referral action." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="email_address" nullable="false" remarks="The email address used by parties referenced by this record." size="256" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="agency_code_ref" nullable="true" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency that the email address belongs to." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="geo_organization_unit_code" nullable="true" remarks="The geographic organization code that the email address belongs to." size="10" type="varchar" typeCode="12">
            <parent column="geo_organization_unit_code" foreignKey="FK_emailref__geo_org_unit_code" implied="false" onDeleteCascade="false" schema="complaint" table="geo_organization_unit_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the email reference record." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when email reference was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="The id of the user that updated email reference." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when email reference was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="true" digits="0" id="8" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the email reference is active." size="1" type="bool" typeCode="-7"/>
         <primaryKey column="email_reference_guid" sequenceNumberInPK="1"/>
         <index name="PK_emailref" unique="true">
            <column ascending="true" name="email_reference_guid"/>
         </index>
      </table>
      <table name="entity_code" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="entity_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <child column="entity_code" foreignKey="staging_staging_metadata_mapping_entity_code" implied="false" onDeleteCascade="false" schema="complaint" table="staging_metadata_mapping"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="entity_code" sequenceNumberInPK="1"/>
         <index name="PK_entity_code" unique="true">
            <column ascending="true" name="entity_code"/>
         </index>
      </table>
      <table name="feature_agency_xref" remarks="Maintains a mapping between FEATURES and AGENCIES that allow for features to be displayed or hidden as required." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="feature_agency_xref_guid" nullable="false" remarks="System generated unique key for a FEATURE_AGENCY_XREF ecord.  This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="feature_code" nullable="false" remarks="A human readable code used to identify a FEATURE that is controlled by the FEATURE_AGENCY_XREF table." size="10" type="varchar" typeCode="12">
            <parent column="feature_code" foreignKey="FK_featurecd" implied="false" onDeleteCascade="false" schema="complaint" table="feature_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="agency_code_ref" nullable="false" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency for which the feature is either enabled or disabled." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the FEATURE should be rendered the for users in the given AGENCY" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the FEATURE / AGENCY mapping." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the FEATURE / AGENCY mapping was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="The id of the user that updated the FEATURE / AGENCY mapping" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the FEATURE / AGENCY mapping was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="feature_agency_xref_guid" sequenceNumberInPK="1"/>
         <index name="PK_featagcyxr" unique="true">
            <column ascending="true" name="feature_agency_xref_guid"/>
         </index>
         <index name="UK_unique_feature_agency" unique="true">
            <column ascending="true" name="feature_code"/>
            <column ascending="true" name="agency_code_ref"/>
         </index>
      </table>
      <table name="feature_code" remarks="A list of FEATUREs that can be enabled or disabled on a per agency basis." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="feature_code" nullable="false" remarks="A human readable code used to identify a FEATURE that is controlled by the FEATURE_AGENCY_XREF table." size="10" type="varchar" typeCode="12">
            <child column="feature_code" foreignKey="FK_featurecd" implied="false" onDeleteCascade="false" schema="complaint" table="feature_agency_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the FEATURE controlled by the flag." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the FEATURE controlled by the flag." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of  the FEATUREs should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the FEATURE is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the FEATURE." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the FEATURE was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the FEATURE" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the FEATURE was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="feature_code" sequenceNumberInPK="1"/>
         <index name="PK_featurecd" unique="true">
            <column ascending="true" name="feature_code"/>
         </index>
      </table>
      <table name="flyway_schema_history" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="installed_rank" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="version" nullable="true" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="description" nullable="false" remarks="" size="200" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="type" nullable="false" remarks="" size="20" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="script" nullable="false" remarks="" size="1000" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="checksum" nullable="true" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="installed_by" nullable="false" remarks="" size="100" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="7" name="installed_on" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="execution_time" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="success" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <primaryKey column="installed_rank" sequenceNumberInPK="1"/>
         <index name="flyway_schema_history_pk" unique="true">
            <column ascending="true" name="installed_rank"/>
         </index>
         <index name="flyway_schema_history_s_idx" unique="false">
            <column ascending="true" name="success"/>
         </index>
      </table>
      <table name="geo_org_unit_structure" remarks="A geographical organization unit structure is a parent/child relationship between two geographical organization units." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="geo_org_unit_structure_guid" nullable="false" remarks="System generated unique key for a geographical organization unit structure. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="1" name="effective_date" nullable="false" remarks="The date the Geographical Organizational Unit Structure becomes effective as a valid relationship within the Ministry organizational structure." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="2" name="expiry_date" nullable="true" remarks="The date the Geographical Organizational Unit Structure is no longer recognized as a valid relationship within the Ministry organizational structure." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="create_user_id" nullable="false" remarks="The id of the user that created the geographical organization unit structure." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="4" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the geographical organization unit structure was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="update_user_id" nullable="false" remarks="The id of the user that updated the geographical organization unit structure." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the geographical organization unit structure was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="agency_code_ref" nullable="true" remarks="Key representing an agency stored in the agency_code table of the shared schema.  Used to map geographic organization structures to individual agencies as different structures are used throughout the sector." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="parent_geo_org_unit_code" nullable="true" remarks="The geographical organization that contains the child geographical organization unit." size="10" type="varchar" typeCode="12">
            <parent column="geo_organization_unit_code" foreignKey="FK_gorgustrct_parent_geoorgutcd" implied="false" onDeleteCascade="false" schema="complaint" table="geo_organization_unit_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="child_geo_org_unit_code" nullable="true" remarks="The geographical organization that is contained by the parent geographical organization unit." size="10" type="varchar" typeCode="12">
            <parent column="geo_organization_unit_code" foreignKey="FK_gorgustrct_child_geoorgutcd" implied="false" onDeleteCascade="false" schema="complaint" table="geo_organization_unit_code"/>
         </column>
         <primaryKey column="geo_org_unit_structure_guid" sequenceNumberInPK="1"/>
         <index name="PK_gorgustrct" unique="true">
            <column ascending="true" name="geo_org_unit_structure_guid"/>
         </index>
         <index name="UQ_gorgustrct" unique="true">
            <column ascending="true" name="parent_geo_org_unit_code"/>
            <column ascending="true" name="child_geo_org_unit_code"/>
         </index>
      </table>
      <table name="geo_org_unit_structure_h" remarks="History table for geo_org_unit_structure table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_gorgustrct_guid" nullable="false" remarks="System generated unique key for geographic organization unit structure history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the geographic organization unit structure that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the geographic organization unit structure table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the geographic organization unit structure table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_gorgustrct_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_gorgustrct" unique="true">
            <column ascending="true" name="h_gorgustrct_guid"/>
         </index>
      </table>
      <table name="geo_org_unit_type_code" remarks="A geographical organization unit type describes the level of granularity for a given geographical organization unit. Supported geographical organization unit types are (ZONE = Zone; REGION = Region; OFFLOC = Office Location; AREA = Area)." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="geo_org_unit_type_code" nullable="false" remarks="A human readable code used to identify a geographical organization unit type." size="10" type="varchar" typeCode="12">
            <child column="geo_org_unit_type_code" foreignKey="FK_geoorgutnd_gorgtypecd" implied="false" onDeleteCascade="false" schema="complaint" table="geo_organization_unit_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the geographical organization unit type code." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the geographical organization unit type code." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of the geographical organization unit type code table should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the geographical organization unit type code is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the geographical organization unit type code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the geographical organization unit type code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the geographical organization unit type code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the geographical organization unit type code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="geo_org_unit_type_code" sequenceNumberInPK="1"/>
         <index name="PK_gorgtypecd" unique="true">
            <column ascending="true" name="geo_org_unit_type_code"/>
         </index>
      </table>
      <table name="geo_organization_unit_code" remarks="A geographical organization unit is a named geographical boundary that represents a physical location.   The level of granularity can vary with Regions being the highest level - for example Okanagan, and Areas being the lowest level - for example Big White" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="geo_organization_unit_code" nullable="false" remarks="A human readable code used to identify a geographical organization unit." size="10" type="varchar" typeCode="12">
            <child column="geo_organization_unit_code" foreignKey="FK_complaint_geoorgutnd" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
            <child column="geo_organization_unit_code" foreignKey="FK_emailref__geo_org_unit_code" implied="false" onDeleteCascade="false" schema="complaint" table="email_reference"/>
            <child column="child_geo_org_unit_code" foreignKey="FK_gorgustrct_child_geoorgutcd" implied="false" onDeleteCascade="false" schema="complaint" table="geo_org_unit_structure"/>
            <child column="parent_geo_org_unit_code" foreignKey="FK_gorgustrct_parent_geoorgutcd" implied="false" onDeleteCascade="false" schema="complaint" table="geo_org_unit_structure"/>
            <child column="geo_organization_unit_code" foreignKey="FK_office_geoorgutnd" implied="false" onDeleteCascade="false" schema="complaint" table="office"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="true" remarks="The short description of the geographical organization unit code." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the geographical organization unit code." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="3" name="effective_date" nullable="false" remarks="The date the Geographical Organizational Unit becomes effective as a boundaried physical location within the Ministry organizational structure." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="4" name="expiry_date" nullable="true" remarks="The date the Geographical Organizational Unit is no longer recognized as a valid physical location within the Ministry organizational structure." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the geographical organization unit code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the geographical organization unit code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the geographical organization unit code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the geographical organization unit code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="geo_org_unit_type_code" nullable="true" remarks="A human readable code used to identify a geographical organization unit type." size="10" type="varchar" typeCode="12">
            <parent column="geo_org_unit_type_code" foreignKey="FK_geoorgutnd_gorgtypecd" implied="false" onDeleteCascade="false" schema="complaint" table="geo_org_unit_type_code"/>
         </column>
         <column autoUpdated="false" defaultValue="false" digits="0" id="10" name="administrative_office_ind" nullable="false" remarks="Indicates if the unit is a COSHQ Office." size="1" type="bool" typeCode="-7"/>
         <primaryKey column="geo_organization_unit_code" sequenceNumberInPK="1"/>
         <index name="PK_geoorgutnd" unique="true">
            <column ascending="true" name="geo_organization_unit_code"/>
         </index>
      </table>
      <table name="gir_complaint" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="gir_complaint_guid" nullable="false" remarks="System generated unique key for a gir complaint. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="gir_type_code" nullable="true" remarks="A human readable code used to identify a type of GIR complaint." size="10" type="varchar" typeCode="12">
            <parent column="gir_type_code" foreignKey="FK_gircmplnt_cmpltgircd" implied="false" onDeleteCascade="false" schema="complaint" table="gir_type_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="create_user_id" nullable="false" remarks="The id of the user that created the GIR complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="3" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the GIR complaint was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="update_user_id" nullable="false" remarks="The id of the user that updated the GIR complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the GIR complaint was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="complaint_identifier" nullable="false" remarks="Natural key for a complaint generated by webEOC." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="FK_gircmplnt_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <primaryKey column="gir_complaint_guid" sequenceNumberInPK="1"/>
         <index name="PK_gircmplnt" unique="true">
            <column ascending="true" name="gir_complaint_guid"/>
         </index>
         <index name="UQ_gircmplnt" unique="true">
            <column ascending="true" name="complaint_identifier"/>
         </index>
      </table>
      <table name="gir_complaint_h" remarks="History table for gir_complaint table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_gircmplt_guid" nullable="false" remarks="System generated unique key for GIR complaint history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the GIR complaint that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the GIR complaint table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the GIR complaint table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_gircmplt_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_gircmplt" unique="true">
            <column ascending="true" name="h_gircmplt_guid"/>
         </index>
      </table>
      <table name="gir_type_code" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="gir_type_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <child column="gir_type_code" foreignKey="FK_gircmplnt_cmpltgircd" implied="false" onDeleteCascade="false" schema="complaint" table="gir_complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="true" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="true" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="gir_type_code" sequenceNumberInPK="1"/>
         <index name="PK_girtypecd" unique="true">
            <column ascending="true" name="gir_type_code"/>
         </index>
      </table>
      <table name="hwcr_complaint" remarks="A complaint that a caller believes could involve a conflict between Humans and Wildlife." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="hwcr_complaint_guid" nullable="false" remarks="System generated unique key for a hwcr complaint. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111">
            <child column="hwcr_complaint_guid" foreignKey="FK_attrhwcrx_hwcrcmplnt" implied="false" onDeleteCascade="false" schema="complaint" table="attractant_hwcr_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="other_attractants_text" nullable="true" remarks="Provides a more detailed description when the attractant of type &quot;OTHER&quot; is included." size="4000" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="create_user_id" nullable="false" remarks="The id of the user that created the HWCR complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="3" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the HWCR complaint was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="update_user_id" nullable="false" remarks="The id of the user that updated the HWCR complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the HWCR complaint was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="complaint_identifier" nullable="false" remarks="Natural key for a complaint generated by webEOC." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="FK_hwcrcmplnt_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="species_code" nullable="false" remarks="A human readable code used to identify a wildlife species." size="10" type="varchar" typeCode="12">
            <parent column="species_code" foreignKey="FK_hwcrcmplnt_speciescd" implied="false" onDeleteCascade="false" schema="complaint" table="species_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="hwcr_complaint_nature_code" nullable="true" remarks="A human readable code used to identify the nature of the Human Wildlife Conflict." size="10" type="varchar" typeCode="12">
            <parent column="hwcr_complaint_nature_code" foreignKey="FK_hwcrcmplnt_cmpltntrcd" implied="false" onDeleteCascade="false" schema="complaint" table="hwcr_complaint_nature_code"/>
         </column>
         <primaryKey column="hwcr_complaint_guid" sequenceNumberInPK="1"/>
         <index name="PK_hwcrcmplnt" unique="true">
            <column ascending="true" name="hwcr_complaint_guid"/>
         </index>
         <index name="UQ_hwcrcmplnt" unique="true">
            <column ascending="true" name="complaint_identifier"/>
         </index>
      </table>
      <table name="hwcr_complaint_h" remarks="History table for hwcr_complaint table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_hwcrcmplt_guid" nullable="false" remarks="System generated unique key for HWCR complaint history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the HWCR complaint that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the HWCR complaint table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the HWCR complaint table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_hwcrcmplt_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_hwcrcmplt" unique="true">
            <column ascending="true" name="h_hwcrcmplt_guid"/>
         </index>
      </table>
      <table name="hwcr_complaint_nature_code" remarks="Modifier that further describes the nature of Human Wildlife Conflict complaints.   (E.g. DEADNV = Dead wildlife - no violation suspected; TRAP = Wildlife in trap)" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="hwcr_complaint_nature_code" nullable="false" remarks="A human readable code used to identify the nature of the Human Wildlife Conflict." size="10" type="varchar" typeCode="12">
            <child column="hwcr_complaint_nature_code" foreignKey="FK_hwcrcmplnt_cmpltntrcd" implied="false" onDeleteCascade="false" schema="complaint" table="hwcr_complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the nature of the Human Wildlife Conflict code." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the nature of the Human Wildlife Conflict code." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of the nature of the Human Wildlife Conflict code table should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the nature of the Human Wildlife Conflict code is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the human wildlife conflict nature code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the human wildlife conflict nature code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the human wildlife conflict nature code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the human wildlife conflict nature code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="hwcr_complaint_nature_code" sequenceNumberInPK="1"/>
         <index name="PK_cmpltntrcd" unique="true">
            <column ascending="true" name="hwcr_complaint_nature_code"/>
         </index>
      </table>
      <table name="linked_complaint_xref" remarks="Provides the ability to link one COMPLAINT to another COMPLAINT.   The initial use case for this table is to identify duplicate complaints, however additional linkages maybe possible in the future." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="linked_complaint_xref_guid" nullable="false" remarks="A human readable code used to identify a complaint linkage." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="complaint_identifier" nullable="false" remarks="One half of a linked complaint pair.  If the type requires a context of hierarchy, the complaint that is higher in the hierarchy.  For example, in the case of duplicate complaints, this would be the complaint that would remain open and where the majority of the information should be contained." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="FK_lnkcmplxref_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="linked_complaint_identifier" nullable="false" remarks="One half of a linked complaint pair.  If the type requires a context of hierarchy, the complaint that is lower in the hierarchy.  For example, in the case of duplicate complaints, this would be the complaint that would be closed as a duplicate of the parent." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="FK_lnkcmplxref_linked_complaint" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="active_ind" nullable="false" remarks="Flag indicating if the linkage is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the complaint linkage." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the complaint linkage was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="true" remarks="The id of the user that updated the complaint linkage." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="true" remarks="The timestamp when the complaint linkage was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="'DUPLICATE'::character varying" digits="0" id="8" name="link_type" nullable="false" remarks="The type of link between complaints, DUPLICATE or LINK" size="20" type="varchar" typeCode="12">
            <parent column="linked_complaint_xref_type_code" foreignKey="FK_lnkcmplxref_link_type" implied="false" onDeleteCascade="false" schema="complaint" table="linked_complaint_xref_type_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="person_guid" nullable="true" remarks="The person who created the link between complaints" size="2147483647" type="uuid" typeCode="1111">
            <parent column="person_guid" foreignKey="FK_lnkcmplxref_person_guid" implied="false" onDeleteCascade="false" schema="complaint" table="person"/>
         </column>
         <primaryKey column="linked_complaint_xref_guid" sequenceNumberInPK="1"/>
         <index name="PK_lnkcmplxref" unique="true">
            <column ascending="true" name="linked_complaint_xref_guid"/>
         </index>
         <index name="linked_complaint_xref_linked_complaint_identifier_active_in_idx" unique="false">
            <column ascending="true" name="linked_complaint_identifier"/>
            <column ascending="true" name="active_ind"/>
         </index>
         <checkConstraint constraint="(((complaint_identifier)::text &lt;&gt; (linked_complaint_identifier)::text))" name="NE_lnkcmplxref_no_self_link"/>
      </table>
      <table name="linked_complaint_xref_type_code" remarks="Code table for different types of complaint link types" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="linked_complaint_xref_type_code" nullable="false" remarks="A human readable code used to identify a link type between complaints" size="20" type="varchar" typeCode="12">
            <child column="link_type" foreignKey="FK_lnkcmplxref_link_type" implied="false" onDeleteCascade="false" schema="complaint" table="linked_complaint_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the link type" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the link type" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values should be displayed when presented to a user in a list" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="true" digits="0" id="4" name="active_ind" nullable="false" remarks="Flag indicating if the link type is active" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="create_user_guid" nullable="true" remarks="" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the linked complaint type code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="update_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="9" name="update_user_guid" nullable="true" remarks="" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="10" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the linked complaint type code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="linked_complaint_xref_type_code" sequenceNumberInPK="1"/>
         <index name="PK_linked_complaint_xref_type_code" unique="true">
            <column ascending="true" name="linked_complaint_xref_type_code"/>
         </index>
      </table>
      <table name="office" remarks="An office is a physical location that serves as a central organization point for groups of users of the system." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="office_guid" nullable="false" remarks="System generated unique key for an office. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111">
            <child column="office_guid" foreignKey="FK_officer_office" implied="false" onDeleteCascade="false" schema="complaint" table="officer"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="create_user_id" nullable="false" remarks="The id of the user that created the office." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="2" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the office was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="update_user_id" nullable="false" remarks="The id of the user that updated the office." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="4" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the office was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="geo_organization_unit_code" nullable="true" remarks="A human readable code used to identify a geographical organization unit.  The geographical unit where the office is located.   This might not necessarily be the lowest level in the geographical organizational unit hierarchy." size="10" type="varchar" typeCode="12">
            <parent column="geo_organization_unit_code" foreignKey="FK_office_geoorgutnd" implied="false" onDeleteCascade="false" schema="complaint" table="geo_organization_unit_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="agency_code_ref" nullable="true" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency that owns the office." size="6" type="varchar" typeCode="12"/>
         <primaryKey column="office_guid" sequenceNumberInPK="1"/>
         <index name="PK_office" unique="true">
            <column ascending="true" name="office_guid"/>
         </index>
      </table>
      <table name="office_h" remarks="History table for office table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_office_guid" nullable="false" remarks="System generated unique key for office history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the office that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the office table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the office table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_office_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_office" unique="true">
            <column ascending="true" name="h_office_guid"/>
         </index>
      </table>
      <table name="officer" remarks="An officer is a subtype of a person who can be identified through their IDIR." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="officer_guid" nullable="false" remarks="System generated unique key for an officer. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111">
            <child column="officer_guid" foreignKey="FK_cmplreferral__officer_guid" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_referral"/>
            <child column="officer_guid" foreignKey="officer_team_xref_officer_fk" implied="false" onDeleteCascade="false" schema="complaint" table="officer_team_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="user_id" nullable="false" remarks="The IDIR ID issued to the user by the Government of British Columbia as part of their employment." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="create_user_id" nullable="false" remarks="The id of the user that created the officer." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="3" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the officer was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="update_user_id" nullable="false" remarks="The id of the user that updated the officer." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the officer was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="person_guid" nullable="true" remarks="System generated unique key for an person." size="2147483647" type="uuid" typeCode="1111">
            <parent column="person_guid" foreignKey="FK_officer_person" implied="false" onDeleteCascade="false" schema="complaint" table="person"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="office_guid" nullable="true" remarks="System generated unique key for an office. The primary office an officer is assigned to." size="2147483647" type="uuid" typeCode="1111">
            <parent column="office_guid" foreignKey="FK_officer_office" implied="false" onDeleteCascade="false" schema="complaint" table="office"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="auth_user_guid" nullable="true" remarks="The SiteMinder guid returned to the application from KeyCloak.   Used to uniquely identify a user over the course of their lifecycle." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="false" digits="0" id="9" name="coms_enrolled_ind" nullable="true" remarks="" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="false" digits="0" id="10" name="deactivate_ind" nullable="true" remarks="A boolean indicator representing if an officer has been deactivated" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="11" name="agency_code_ref" nullable="true" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency that employs the Officer." size="6" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="12" name="park_area_guid" nullable="true" remarks="System generated unique identifier for a park area." size="2147483647" type="uuid" typeCode="1111"/>
         <primaryKey column="officer_guid" sequenceNumberInPK="1"/>
         <index name="PK_officer" unique="true">
            <column ascending="true" name="officer_guid"/>
         </index>
         <index name="UQ_officer" unique="true">
            <column ascending="true" name="person_guid"/>
         </index>
      </table>
      <table name="officer_h" remarks="History table for officer table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_officer_guid" nullable="false" remarks="System generated unique key for officer history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the officer that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the officer table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the officer table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_officer_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_officer" unique="true">
            <column ascending="true" name="h_officer_guid"/>
         </index>
      </table>
      <table name="officer_team_xref" remarks="Defines the teams an officer may be on" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="officer_team_xref_guid" nullable="false" remarks="System generated unique key for a OFFICER_TEAM_XREF record.  This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="officer_guid" nullable="false" remarks="Unique key for an officer. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111">
            <parent column="officer_guid" foreignKey="officer_team_xref_officer_fk" implied="false" onDeleteCascade="false" schema="complaint" table="officer"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="team_guid" nullable="false" remarks="Unique key for a team. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111">
            <parent column="team_guid" foreignKey="officer_team_xref_team_fk" implied="false" onDeleteCascade="false" schema="complaint" table="team"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="active_ind" nullable="false" remarks="Used to indicate if the users in the OFFICER_TEAM_XREF recrodis active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="true" remarks="The id of the user that created the OFFICER_TEAM_XREF." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the OFFICER_TEAM_XREF was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="true" remarks="The id of the user that updated the OFFICER_TEAM_XREF" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the OFFICER_TEAM_XREF was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="officer_team_xref_guid" sequenceNumberInPK="1"/>
         <index name="officer_team_xref_pk" unique="true">
            <column ascending="true" name="officer_team_xref_guid"/>
         </index>
      </table>
      <table name="officer_team_xref_h" remarks="History table for officer_team_xref table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_officer_team_xref_guid" nullable="false" remarks="System generated unique key for officer_team_xref history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the officer_team_xref that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the officer_team_xref table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the officer_team_xref table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_officer_team_xref_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_officer_team_xref" unique="true">
            <column ascending="true" name="h_officer_team_xref_guid"/>
         </index>
      </table>
      <table name="person" remarks="A person is an individual that is being tracked explicitly within the system.  The criteria for being included as a trackable individual is the possession of a unique identifier that can be used for dealiasing.  For example an IDIR or a BC Drivers Licence." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="person_guid" nullable="false" remarks="System generated unique key for an person. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111">
            <child column="person_guid" foreignKey="FK_lnkcmplxref_person_guid" implied="false" onDeleteCascade="false" schema="complaint" table="linked_complaint_xref"/>
            <child column="person_guid" foreignKey="FK_officer_person" implied="false" onDeleteCascade="false" schema="complaint" table="officer"/>
            <child column="person_guid" foreignKey="FK_person_complaint_xref__person_guid" implied="false" onDeleteCascade="false" schema="complaint" table="person_complaint_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="first_name" nullable="false" remarks="The first name of a person." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="middle_name_1" nullable="true" remarks="The first middle name of a person." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="middle_name_2" nullable="true" remarks="Any remaining middle names beyond the first of a person." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="last_name" nullable="false" remarks="The last name of a person." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the person." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the person was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the person." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the person was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="person_guid" sequenceNumberInPK="1"/>
         <index name="PK_person" unique="true">
            <column ascending="true" name="person_guid"/>
         </index>
      </table>
      <table name="person_complaint_xref" remarks="Used to create a relationship between a person and a complaint.   One person can play many roles on a complaint, and many people could be involved in a single complaint." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="person_complaint_xref_guid" nullable="false" remarks="System generated unique key for a relationship between a person and a complaint. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="person_guid" nullable="false" remarks="System generated unique key for an person." size="2147483647" type="uuid" typeCode="1111">
            <parent column="person_guid" foreignKey="FK_person_complaint_xref__person_guid" implied="false" onDeleteCascade="false" schema="complaint" table="person"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="complaint_identifier" nullable="false" remarks="Natural key for a complaint generated by webEOC.  Format is YY-###### where the number portion of the sequence resets to 0 on the new year." size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="FK_person_complaint_xref__complaint_identifier" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="person_complaint_xref_code" nullable="false" remarks="A human readable code used to identify a relationship type between a person and a complaint." size="10" type="varchar" typeCode="12">
            <parent column="person_complaint_xref_code" foreignKey="FK_person_complaint_xref__person_complaint_xref_code" implied="false" onDeleteCascade="false" schema="complaint" table="person_complaint_xref_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the relationship between a person and a complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the relationship between a person and a complaint  was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="The id of the user that updated the relationship between a person and a complaint ." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the relationship between a person and a complaint  was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the relationship type between a person and a complaint code is active." size="1" type="bool" typeCode="-7"/>
         <primaryKey column="person_complaint_xref_guid" sequenceNumberInPK="1"/>
         <index name="PK_person_complaint_xref_guid" unique="true">
            <column ascending="true" name="person_complaint_xref_guid"/>
         </index>
         <index name="person_complaint_xref_complaint_identifier_person_complaint_idx" unique="true">
            <column ascending="true" name="complaint_identifier"/>
            <column ascending="true" name="person_complaint_xref_code"/>
            <column ascending="true" name="active_ind"/>
         </index>
         <index name="person_complaint_xref_complaint_identifier_person_guid_pers_idx" unique="true">
            <column ascending="true" name="complaint_identifier"/>
            <column ascending="true" name="person_guid"/>
            <column ascending="true" name="person_complaint_xref_code"/>
            <column ascending="true" name="active_ind"/>
         </index>
      </table>
      <table name="person_complaint_xref_code" remarks="Used to track the relationship type between person and complaint.  For example: 'ASSIGNEE' = Assignee" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="person_complaint_xref_code" nullable="false" remarks="A human readable code used to identify a relationship type between a person and a complaint." size="10" type="varchar" typeCode="12">
            <child column="person_complaint_xref_code" foreignKey="FK_person_complaint_xref__person_complaint_xref_code" implied="false" onDeleteCascade="false" schema="complaint" table="person_complaint_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the relationship type between a person and a complaint." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the relationship type between a person and a complaint." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of the relationship type between a person and a complaint code table should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="The id of the user that created the relationship type between a person and a complaint." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the relationship type between a person and a complaint  was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="The id of the user that updated the relationship type between a person and a complaint ." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the relationship type between a person and a complaint  was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="true" digits="0" id="8" name="active_ind" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <primaryKey column="person_complaint_xref_code" sequenceNumberInPK="1"/>
         <index name="PK_person_complaint_xref_code" unique="true">
            <column ascending="true" name="person_complaint_xref_code"/>
         </index>
      </table>
      <table name="person_complaint_xref_h" remarks="History table for person_complaint_xref" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_person_complaint_xref_guid" nullable="false" remarks="System generated unique key for person assigned to complaint history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the person and complaint mapping that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in complaint table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_person_complaint_xref_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_person_complaint_xref_guid" unique="true">
            <column ascending="true" name="h_person_complaint_xref_guid"/>
         </index>
      </table>
      <table name="person_h" remarks="History table for person table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_person_guid" nullable="false" remarks="System generated unique key for person history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the person that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the person table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the person table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_person_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_person" unique="true">
            <column ascending="true" name="h_person_guid"/>
         </index>
      </table>
      <table name="reported_by_code" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="reported_by_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <child column="reported_by_code" foreignKey="FK_complaint_reported_by_code" implied="false" onDeleteCascade="false" schema="complaint" table="complaint"/>
            <child column="upd_reported_by_code" foreignKey="fk_reported_by_code" implied="false" onDeleteCascade="false" schema="complaint" table="complaint_update"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="reported_by_code" sequenceNumberInPK="1"/>
         <index name="PK_reportedbycode" unique="true">
            <column ascending="true" name="reported_by_code"/>
         </index>
      </table>
      <table name="species_code" remarks="The species involved in a Human Wildlife Conflict (E.g. BLKBEAR = Black Bear; WOLVERN = Wolverine)" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="species_code" nullable="false" remarks="A human readable code used to identify a wildlife species." size="10" type="varchar" typeCode="12">
            <child column="species_code" foreignKey="FK_hwcrcmplnt_speciescd" implied="false" onDeleteCascade="false" schema="complaint" table="hwcr_complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the species code." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the species code." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of the species code table should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the species code is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="legacy_code" nullable="true" remarks="The code for the species from the CORS_SPECIES_CODE table in the COORS database." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="create_user_id" nullable="true" remarks="The id of the user that created the species code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the species code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="8" name="update_user_id" nullable="true" remarks="The id of the user that updated the species code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="9" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the species code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="false" digits="0" id="10" name="large_carnivore_ind" nullable="true" remarks="A boolean indicator representing if an officer has been enrolled in COMS" size="1" type="bool" typeCode="-7"/>
         <primaryKey column="species_code" sequenceNumberInPK="1"/>
         <index name="PK_speciescd" unique="true">
            <column ascending="true" name="species_code"/>
         </index>
      </table>
      <table name="staging_activity_code" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="staging_activity_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <child column="staging_activity_code" foreignKey="staging_complaint_staging_staging_activity_code" implied="false" onDeleteCascade="false" schema="complaint" table="staging_complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="staging_activity_code" sequenceNumberInPK="1"/>
         <index name="PK_staging_activity_code" unique="true">
            <column ascending="true" name="staging_activity_code"/>
         </index>
      </table>
      <table name="staging_complaint" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="staging_complaint_guid" nullable="false" remarks="" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="staging_status_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <parent column="staging_status_code" foreignKey="staging_complaint_staging_status_code" implied="false" onDeleteCascade="false" schema="complaint" table="staging_status_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="staging_activity_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <parent column="staging_activity_code" foreignKey="staging_complaint_staging_staging_activity_code" implied="false" onDeleteCascade="false" schema="complaint" table="staging_activity_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="complaint_identifier" nullable="false" remarks="" size="20" type="varchar" typeCode="12">
            <parent column="complaint_identifier" foreignKey="Implied Constraint" implied="true" onDeleteCascade="false" schema="complaint" table="complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="complaint_jsonb" nullable="false" remarks="" size="2147483647" type="jsonb" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="staging_complaint_guid" sequenceNumberInPK="1"/>
         <index name="PK_staging_complaint" unique="true">
            <column ascending="true" name="staging_complaint_guid"/>
         </index>
      </table>
      <table name="staging_metadata_mapping" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="staging_metadata_mapping_guid" nullable="false" remarks="" size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="entity_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <parent column="entity_code" foreignKey="staging_staging_metadata_mapping_entity_code" implied="false" onDeleteCascade="false" schema="complaint" table="entity_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="staged_data_value" nullable="false" remarks="" size="120" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="live_data_value" nullable="false" remarks="" size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="staging_metadata_mapping_guid" sequenceNumberInPK="1"/>
         <index name="PK_staging_metadata_mapping_guid" unique="true">
            <column ascending="true" name="staging_metadata_mapping_guid"/>
         </index>
         <index name="staging_metadata_mapping_unique" unique="true">
            <column ascending="true" name="entity_code"/>
            <column ascending="true" name="staged_data_value"/>
            <column ascending="true" name="live_data_value"/>
         </index>
      </table>
      <table name="staging_status_code" remarks="" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="staging_status_code" nullable="false" remarks="" size="10" type="varchar" typeCode="12">
            <child column="staging_status_code" foreignKey="staging_complaint_staging_status_code" implied="false" onDeleteCascade="false" schema="complaint" table="staging_complaint"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="" size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="" size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="" size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="" size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="" size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="staging_status_code" sequenceNumberInPK="1"/>
         <index name="PK_staging_status_code" unique="true">
            <column ascending="true" name="staging_status_code"/>
         </index>
      </table>
      <table name="team" remarks="Contains a list of TEAM types" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="team_guid" nullable="false" remarks="A system generated guid to uniquely identify a TEAM" size="2147483647" type="uuid" typeCode="1111">
            <child column="team_guid" foreignKey="officer_team_xref_team_fk" implied="false" onDeleteCascade="false" schema="complaint" table="officer_team_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="team_code" nullable="false" remarks="A human readable code used to identify a TEAM" size="15" type="varchar" typeCode="12">
            <parent column="team_code" foreignKey="team_team_code_fk" implied="false" onDeleteCascade="false" schema="complaint" table="team_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="agency_code_ref" nullable="false" remarks="Key representing an agency stored in the agency_code table of the shared schema.  The agency for which the team is defined." size="6" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="true" digits="0" id="3" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the TEAM is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="create_user_id" nullable="true" remarks="The id of the user that created the TEAM." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="5" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the TEAM was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="6" name="update_user_id" nullable="true" remarks="The id of the user that updated the TEAM" size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="7" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the TEAM was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="team_guid" sequenceNumberInPK="1"/>
         <index name="team_pk" unique="true">
            <column ascending="true" name="team_guid"/>
         </index>
         <index name="team_un" unique="true">
            <column ascending="true" name="team_code"/>
            <column ascending="true" name="agency_code_ref"/>
         </index>
      </table>
      <table name="team_code" remarks="An team is an organized and named grouping of people that interacts in some way with the Ministry." schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="team_code" nullable="false" remarks="A human readable code used to identify an team." size="10" type="varchar" typeCode="12">
            <child column="team_code" foreignKey="team_team_code_fk" implied="false" onDeleteCascade="false" schema="complaint" table="team"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the team code." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the team code." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of the team code table should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the team code is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the team code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the team was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the team code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the team was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="team_code" sequenceNumberInPK="1"/>
         <index name="PK_teamcode" unique="true">
            <column ascending="true" name="team_code"/>
         </index>
      </table>
      <table name="team_h" remarks="History table for team table" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="h_team_guid" nullable="false" remarks="System generated unique key for team history. This key should never be exposed to users via any system utilizing the tables." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="target_row_id" nullable="false" remarks="The unique key for the team that has been created or modified." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="operation_type" nullable="false" remarks="The operation performed: I = Insert, U = Update, D = Delete" size="1" type="bpchar" typeCode="1"/>
         <column autoUpdated="false" defaultValue="CURRENT_USER" digits="0" id="3" name="operation_user_id" nullable="false" remarks="The id of the user that created or modified the data in the team table.  Defaults to the logged in user if not passed in by the application." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="operation_executed_at" nullable="false" remarks="The timestamp when the data in the team table was created or modified.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="data_after_executed_operation" nullable="true" remarks="A JSON representation of the row in the table after the operation was completed successfully.   This implies that the latest row in the audit table will always match with the current row in the live table." size="2147483647" type="jsonb" typeCode="1111"/>
         <primaryKey column="h_team_guid" sequenceNumberInPK="1"/>
         <index name="PK_h_team" unique="true">
            <column ascending="true" name="h_team_guid"/>
         </index>
      </table>
      <table name="violation_agency_xref" remarks="Used to track the relationship type between an agency and a violation code.  For example: violation code 'WASTE' is only used by EPO (CEEB) but 'WILDLIFE' is used by both COS and PARKS" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="complaint.uuid_generate_v4()" digits="0" id="0" name="violation_agency_xref_guid" nullable="false" remarks="A human readable code used to identify a relationship type between an agency and a violation code." size="2147483647" type="uuid" typeCode="1111"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="violation_code" nullable="false" remarks="A human readable code used to identify a violation." size="10" type="varchar" typeCode="12">
            <parent column="violation_code" foreignKey="FK_violation_agency_xref__violation_code" implied="false" onDeleteCascade="false" schema="complaint" table="violation_code"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="agency_code_ref" nullable="false" remarks="Key representing an agency stored in the agency_code table of the shared schema.  Used to map violation types to the NatSuite agency responsible for compliance." size="10" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="create_user_id" nullable="false" remarks="The id of the user that created the relationship between an agency and a violation code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="4" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the relationship between an agency and a violation code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="update_user_id" nullable="false" remarks="The id of the user that updated the relationship between an agency and a violation code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="now()" digits="6" id="6" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the relationship between an agency and a violation code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="true" digits="0" id="7" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the relationship type between an agency and a violation code is active." size="1" type="bool" typeCode="-7"/>
         <primaryKey column="violation_agency_xref_guid" sequenceNumberInPK="1"/>
         <index name="PK_violation_agency_xref_guid" unique="true">
            <column ascending="true" name="violation_agency_xref_guid"/>
         </index>
      </table>
      <table name="violation_code" remarks="The alleged violation involved in the    (E.g. ORV = Off Road Vehicles; PESTICDE = Pesticide)" schema="complaint" type="TABLE">
         <column autoUpdated="false" defaultValue="null" digits="0" id="0" name="violation_code" nullable="false" remarks="A human readable code used to identify a violation." size="10" type="varchar" typeCode="12">
            <child column="violation_code" foreignKey="FK_algtncmplt_violatncd" implied="false" onDeleteCascade="false" schema="complaint" table="allegation_complaint"/>
            <child column="violation_code" foreignKey="FK_violation_agency_xref__violation_code" implied="false" onDeleteCascade="false" schema="complaint" table="violation_agency_xref"/>
         </column>
         <column autoUpdated="false" defaultValue="null" digits="0" id="1" name="short_description" nullable="false" remarks="The short description of the violation code." size="50" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="2" name="long_description" nullable="true" remarks="The long description of the violation code." size="250" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="3" name="display_order" nullable="false" remarks="The order in which the values of the violation code table should be displayed when presented to a user in a list." size="10" type="int4" typeCode="4"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="4" name="active_ind" nullable="false" remarks="A boolean indicator to determine if the violation code is active." size="1" type="bool" typeCode="-7"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="5" name="create_user_id" nullable="false" remarks="The id of the user that created the violation code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="6" name="create_utc_timestamp" nullable="false" remarks="The timestamp when the violation code was created.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <column autoUpdated="false" defaultValue="null" digits="0" id="7" name="update_user_id" nullable="false" remarks="The id of the user that updated the violation code." size="32" type="varchar" typeCode="12"/>
         <column autoUpdated="false" defaultValue="null" digits="6" id="8" name="update_utc_timestamp" nullable="false" remarks="The timestamp when the violation code was updated.  The timestamp is stored in UTC with no Offset." size="29" type="timestamp" typeCode="93"/>
         <primaryKey column="violation_code" sequenceNumberInPK="1"/>
         <index name="PK_violatncd" unique="true">
            <column ascending="true" name="violation_code"/>
         </index>
      </table>
   </tables>
   <routines>
      <routine dataAccess="MODIFIES" deterministic="false" name="audit_history()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE

	target_history_table TEXT;
	target_pk TEXT;

  BEGIN
    target_history_table := TG_ARGV[0];
    target_pk := TG_ARGV[1];

    IF TG_OP ='INSERT' THEN 
        
      -- Don't trust the caller not to manipulate any of these fields
      NEW.create_utc_timestamp := current_timestamp; -- create timestamp must be the current time
      NEW.update_utc_timestamp := current_timestamp; -- update timestamp must be the current time
      NEW.update_user_id := NEW.create_user_id;  -- the update user must be the same as the create user

      EXECUTE
        format( 
            'INSERT INTO complaint.%I (target_row_id, operation_type, operation_user_id, data_after_executed_operation) VALUES ($1.%I,  ''I'', $1.create_user_id, to_jsonb($1))',  target_history_table, target_pk
        )
        USING NEW;
      RETURN NEW;

    ELSIF TG_OP = 'UPDATE' THEN 

      -- Don't trust the caller not to manipulate any of these fields
      NEW.update_utc_timestamp := current_timestamp;  -- update timestamp must be the current time
      NEW.create_user_id := OLD.create_user_id; -- create userId can't be altered
      NEW.create_utc_timestamp := OLD.create_utc_timestamp; -- update timestamp can't be altered

      EXECUTE
        format(
            'INSERT INTO complaint.%I (target_row_id, operation_type, operation_user_id, data_after_executed_operation) VALUES ($1.%I, ''U'', $1.update_user_id, to_jsonb($1))', target_history_table, target_pk
          )
        USING NEW;
      RETURN NEW;

    ELSIF TG_OP = 'DELETE' THEN

      EXECUTE
        format(
                'INSERT INTO complaint.%I (target_row_id, operation_type) VALUES ($1.%I, ''D'')', target_history_table, target_pk
        )
        USING OLD;
      RETURN OLD;

    END IF;
  END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="cos_geo_org_unit_flat_mvw_refresh()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[BEGIN 
 	REFRESH MATERIALIZED VIEW complaint.cos_geo_org_unit_flat_mvw;
	RETURN NULL;
 END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="edit_complaint_using_webeoc_complaint(_complaint_identifier character varying)" returnType="void" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[declare
    WEBEOC_USER_ID CONSTANT varchar(6) := 'webeoc';
    WEBEOC_UPDATE_TYPE_INSERT CONSTANT varchar(6) := 'INSERT';
    STAGING_STATUS_CODE_PENDING CONSTANT varchar(7) := 'PENDING';
    STAGING_STATUS_CODE_SUCCESS CONSTANT varchar(7) := 'SUCCESS' ;
    STAGING_STATUS_CODE_EDIT CONSTANT varchar(6) := 'EDIT' ;
    STAGING_STATUS_CODE_ERROR CONSTANT varchar(5) := 'ERROR';
   
	current_complaint_record complaint; -- record being edited
	allegation_complaint_record allegation_complaint;
	edit_complaint_data JSONB; -- the complaint data containing the edits from webeoc
    original_complaint_record JSONB; -- the complaint data before the edits, used to determine i
   
    -- Variable to hold the JSONB data from staging_complaint.  Used to edit a complaint
    _edit_report_type            VARCHAR(120);
    _edit_detail_text            VARCHAR(4000);
    _edit_caller_name            VARCHAR(120);
    _edit_caller_address         VARCHAR(120);
    _edit_address         		VARCHAR(120);
    _edit_caller_email           VARCHAR(120);
    _edit_caller_phone_1         VARCHAR(15);
    _edit_caller_phone_2         VARCHAR(15);
    _edit_caller_phone_3         VARCHAR(15);
    _edit_location_summary_text  VARCHAR(120);
    _edit_location_detailed_text VARCHAR(4000);
    _edit_incident_utc_datetime timestamp;
    _edit_create_utc_timestamp timestamp := (now() AT TIME zone 'UTC');
    _edit_update_utc_timestamp timestamp := (now() AT TIME zone 'UTC');
    _edit_create_userid              VARCHAR(200);
    _edit_update_userid              VARCHAR(200);
    _edit_geo_organization_unit_code VARCHAR(10);
    _edit_incident_reported_utc_timestmp timestamp;
    _edit_address_coordinates_lat VARCHAR(200);
    _edit_address_coordinates_long VARCHAR(200);
    _edit_location_geometry_point GEOMETRY;
    _edit_complaint_status_code VARCHAR(10);

    -- Variables for 'hwcr_complaint' table
    _edit_webeoc_species                    VARCHAR(200);
    _edit_webeoc_hwcr_complaint_nature_code VARCHAR(200);
    _edit_webeoc_cos_area_community         VARCHAR(200);
    _edit_webeoc_attracts_list              VARCHAR(1000);
    _edit_species_code                      VARCHAR(10);
    _edit_hwcr_complaint_nature_code        VARCHAR(10);
    _edit_other_attractants_text            VARCHAR(4000);
    _edit_reported_by_other_text            VARCHAR(4000);
    _edit_webeoc_reported_by_code           VARCHAR(200);
    _edit_cos_reffered_by_lst               VARCHAR(200);
    _edit_in_progress_ind                   VARCHAR(3);
    _edit_observed_ind                      VARCHAR(3);
    _edit_in_progress_ind_bool bool;
    _edit_observed_ind_bool bool;
    _edit_suspect_witnesss_dtl_text VARCHAR(4000);
    _edit_violation_code            VARCHAR(10);
    -- used to generate a uuid.  We use this to create the PK in hwcr_complaint, but
    -- we need to also use it when creating the attractants
    hwcr_uuid uuid;
    enforcement_uuid uuid;
    -- parsed attractants from the jsonb object
    attractants_array text[];
    attractant_item text;
    _attractant_code VARCHAR(10);


   
   
   _current_species_code VARCHAR(10);
   _current_violation_type_code VARCHAR(10);
   
   -- used to indicate if the update causes an edit to the complaint record
   update_edit_ind boolean = false;
   
   USERNAME_TXT CONSTANT varchar(8) = 'username';
  
  
   
BEGIN
   
   
    -- get the staged edit record.  There may be multiple for a given complaint, we just want the last one since that
    -- will contain all previous edits too
   select sc.complaint_jsonb
    into edit_complaint_data
    from complaint.staging_complaint sc 
    where sc.complaint_identifier  = _complaint_identifier
    and sc.staging_activity_code  = STAGING_STATUS_CODE_EDIT
    and sc.staging_status_code  = STAGING_STATUS_CODE_PENDING
    order by sc.update_utc_timestamp desc
	limit 1;

    -- These fields are retrieved to potentially update an existing complaint record
	_edit_detail_text := edit_complaint_data ->> 'cos_call_details';
    _edit_caller_name := edit_complaint_data ->> 'cos_caller_name';
    _edit_caller_phone_1 := complaint.format_phone_number(edit_complaint_data ->> 'cos_primary_phone');
    _edit_caller_phone_2 := complaint.format_phone_number(edit_complaint_data ->> 'cos_alt_phone');
    _edit_caller_phone_3 := complaint.format_phone_number(edit_complaint_data ->> 'cos_alt_phone_2');
    _edit_caller_email := edit_complaint_data ->> 'cos_caller_email';
    _edit_caller_address := edit_complaint_data ->> 'caller_address';
    _edit_address := edit_complaint_data ->> 'address';
    _edit_webeoc_reported_by_code := edit_complaint_data ->> 'cos_reffered_by_lst';
    _edit_reported_by_other_text := edit_complaint_data ->> 'cos_reffered_by_txt';
    _edit_webeoc_species := edit_complaint_data ->> 'species';
    _edit_report_type := edit_complaint_data ->> 'report_type';
    _edit_update_userid := substring(edit_complaint_data ->> USERNAME_TXT from 1 for 32);
    _edit_complaint_status_code := UPPER(edit_complaint_data ->> 'status');
   
    _edit_location_detailed_text := edit_complaint_data ->> 'cos_location_description';
    _edit_incident_utc_datetime := ( edit_complaint_data ->> 'incident_datetime' ):: timestamp AT            TIME zone 'America/Los_Angeles';
    _edit_incident_reported_utc_timestmp := ( edit_complaint_data ->> 'created_by_datetime' ):: timestamp AT TIME zone 'America/Los_Angeles';
	_edit_address_coordinates_lat := complaint.validate_coordinate_field(edit_complaint_data ->> 'address_coordinates_lat');
    _edit_address_coordinates_long := complaint.validate_coordinate_field(edit_complaint_data ->> 'address_coordinates_long');
   
    -- Create a geometry point based on the latitude and longitude
    IF _edit_address_coordinates_lat IS NOT NULL AND _edit_address_coordinates_lat <> '' AND
       _edit_address_coordinates_long IS NOT NULL AND _edit_address_coordinates_long <> '' THEN
        _edit_location_geometry_point := ST_SetSRID(
            ST_MakePoint(
                CAST(_edit_address_coordinates_long AS NUMERIC),
                CAST(_edit_address_coordinates_lat AS NUMERIC)
            ),
            4326
        );
    ELSE
    	_edit_location_geometry_point := ST_SetSRID(ST_MakePoint(0, 0), 4326);
	END IF;



    -- Get the codes from our application (inserting if necessary) for the codes retrieved from WebEOC
    SELECT *
    INTO   _edit_cos_reffered_by_lst
    FROM   complaint.insert_and_return_code(_edit_webeoc_reported_by_code, 'reprtdbycd');

   
    -- Get the current state of the complaint
    SELECT *
    INTO   current_complaint_record
    FROM   complaint.complaint
    WHERE  complaint_identifier = _complaint_identifier;

      -- update the complaint data, if the incoming webeoc contains applicable updates
   if (COALESCE(_edit_detail_text, '') <> COALESCE(current_complaint_record.detail_text, '')) then
	    UPDATE complaint.complaint
	    SET detail_text  = _edit_detail_text
	    WHERE complaint_identifier = _complaint_identifier;
	
	    update_edit_ind = true;
  end if;
   
   -- update the complaint data, if the incoming webeoc contains applicable updates
   if (COALESCE(_edit_caller_name, '') <> COALESCE(current_complaint_record.caller_name, '')) then
	    UPDATE complaint.complaint
	    SET caller_name = _edit_caller_name
	    WHERE complaint_identifier = _complaint_identifier;
	
	    update_edit_ind = true;
  end if;
  
  _edit_caller_phone_1 := complaint.format_phone_number(_edit_caller_phone_1);
  if (COALESCE(_edit_caller_phone_1, '') <> COALESCE(current_complaint_record.caller_phone_1, '')) then
        
	    UPDATE complaint.complaint
	    SET caller_phone_1 = _edit_caller_phone_1
	    WHERE complaint_identifier = _complaint_identifier;
	
	    update_edit_ind = true;
  end if;
  
  _edit_caller_phone_2 := complaint.format_phone_number(_edit_caller_phone_2);
  if (COALESCE(_edit_caller_phone_2, '') <> COALESCE(current_complaint_record.caller_phone_2, '')) then
    	
	    UPDATE complaint.complaint
	    SET caller_phone_2 = _edit_caller_phone_2
	    WHERE complaint_identifier = _complaint_identifier;
	
	    update_edit_ind = true;
  end if;
  
  _edit_caller_phone_3 := complaint.format_phone_number(_edit_caller_phone_3);
  if (COALESCE(_edit_caller_phone_3, '') <> COALESCE(current_complaint_record.caller_phone_3, '')) then
    	
	    UPDATE complaint.complaint
	    SET caller_phone_3 = _edit_caller_phone_3
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;
  
  if (COALESCE(_edit_caller_email, '') <> COALESCE(current_complaint_record.caller_email, '')) then 
		UPDATE complaint.complaint
		SET caller_email = _edit_caller_email
		WHERE complaint_identifier = _complaint_identifier;
		update_edit_ind = true;
  end if;
  
  if (COALESCE(_edit_caller_address, '') <> COALESCE(current_complaint_record.caller_address, '')) then 
	    UPDATE complaint.complaint
	    SET caller_address = _edit_caller_address
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;
 
  if (COALESCE(_edit_address, '') <> COALESCE(current_complaint_record.location_summary_text, '')) then 
	    UPDATE complaint.complaint
	    SET location_summary_text  = _edit_address
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;
  
  if (COALESCE(_edit_cos_reffered_by_lst, '') <> COALESCE(current_complaint_record.reported_by_code, '')) then 
	    UPDATE complaint.complaint
	    SET reported_by_code = _edit_cos_reffered_by_lst
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;
   
  if (COALESCE(_edit_reported_by_other_text, '') <> COALESCE(current_complaint_record.reported_by_other_text, '')) then 
	    UPDATE complaint.complaint
	    SET reported_by_other_text = _edit_reported_by_other_text
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;
 
  if (COALESCE(_edit_location_detailed_text, '') <> COALESCE(current_complaint_record.location_detailed_text, '')) then 
	    UPDATE complaint.complaint
	    SET location_detailed_text  = _edit_location_detailed_text
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;
 
  if (_edit_incident_utc_datetime <> current_complaint_record.incident_utc_datetime) then 
	    UPDATE complaint.complaint
	    SET incident_utc_datetime  = _edit_incident_utc_datetime
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;
 
  if (_edit_incident_reported_utc_timestmp <> current_complaint_record.incident_reported_utc_timestmp) then 
	    UPDATE complaint.complaint
	    SET incident_reported_utc_timestmp  = _edit_incident_reported_utc_timestmp
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;

  if NOT ST_Equals(_edit_location_geometry_point, current_complaint_record.location_geometry_point) then
	    UPDATE complaint.complaint
	    SET location_geometry_point  = _edit_location_geometry_point
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
  end if;
   
  -- the update caused an edit, set the audit fields
  if (update_edit_ind) then
	update complaint.complaint
	set update_user_id = _edit_update_userid, update_utc_timestamp = _edit_update_utc_timestamp, comp_last_upd_utc_timestamp = _edit_update_utc_timestamp
	where complaint_identifier = _complaint_identifier;
  end if;
  
  if (_edit_report_type = 'HWCR') then
      update_edit_ind = false;
	  select hc.hwcr_complaint_guid 
	  into hwcr_uuid
	  from complaint.hwcr_complaint hc where complaint_identifier  = _complaint_identifier;
	 
	  update complaint.attractant_hwcr_xref
	  set active_ind = false
	  where hwcr_complaint_guid = hwcr_uuid;
	 
      -- Convert the comma-separated list into an array
      attractants_array := string_to_array( edit_complaint_data ->> 'attractants_list', ',' );
      -- Iterate over the array
      foreach attractant_item IN ARRAY attractants_array
      LOOP                                                -- Trim whitespace and check if the item is 'Not Applicable'
        IF trim(attractant_item) <> 'Not Applicable' THEN -- Your insertion logic here
          SELECT *
          FROM   complaint.insert_and_return_code( trim(attractant_item), 'atractntcd' )
          INTO   _attractant_code;
          
          INSERT INTO complaint.attractant_hwcr_xref
                      (
                                  attractant_code,
                                  hwcr_complaint_guid,
                                  create_user_id,
                                  create_utc_timestamp,
                                  update_user_id,
                                  update_utc_timestamp
                      )
                      VALUES
                      (
                                  _attractant_code,
                                  hwcr_uuid,
                                  WEBEOC_USER_ID,
                                  _edit_create_utc_timestamp,
                                  WEBEOC_USER_ID,
                                  _edit_update_utc_timestamp
                      );
        
        END IF;
      END LOOP;
    -- get the code based on the update from WebEOC
    SELECT *
    INTO   _edit_species_code
    FROM   complaint.insert_and_return_code(_edit_webeoc_species, 'speciescd');
   
    -- get the current species code
   	SELECT hc.species_code 
   	INTO _current_species_code
	FROM complaint.hwcr_complaint hc 
	WHERE hc.complaint_identifier = _complaint_identifier;


    if (_edit_species_code <> _current_species_code) then 
    	update complaint.hwcr_complaint
    	set species_code = _edit_species_code
    	where complaint_identifier = _complaint_identifier;
    end if;
   
    -- the update caused an edit, set the audit fields
    if (update_edit_ind) then
		update complaint.hwcr_complaint 
		set update_user_id = _edit_update_userid, update_utc_timestamp = _edit_update_utc_timestamp
		where complaint_identifier = _complaint_identifier;
    end if;

  end if;
 
  if (_edit_report_type = 'ERS') then
	  update_edit_ind = false;
  	
  
      _edit_in_progress_ind := (edit_complaint_data->>'violation_in_progress');
      _edit_observed_ind := (edit_complaint_data->>'observe_violation');
      _edit_suspect_witnesss_dtl_text := edit_complaint_data->>'suspect_details';

      IF _edit_in_progress_ind = 'Yes' THEN
        _edit_in_progress_ind_bool := TRUE;
      ELSE
        _edit_in_progress_ind_bool := FALSE;
      END IF; 
      IF _edit_observed_ind = 'Yes' THEN
        _edit_observed_ind_bool := TRUE;
      ELSE
        _edit_observed_ind_bool := FALSE;
      END IF;
     
     -- Get the current state of the complaint
     SELECT *
     INTO   allegation_complaint_record
     FROM   complaint.allegation_complaint ac
     WHERE  complaint_identifier = _complaint_identifier;

   

     if (_edit_observed_ind_bool != allegation_complaint_record.observed_ind) then 
	    UPDATE complaint.allegation_complaint
	    SET observed_ind  = _edit_observed_ind_bool
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
	 end if;
	
     if (_edit_in_progress_ind_bool != allegation_complaint_record.in_progress_ind) then 
	    UPDATE complaint.allegation_complaint
	    SET in_progress_ind  = _edit_in_progress_ind_bool
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
	 end if;
	
     if (_edit_suspect_witnesss_dtl_text <> allegation_complaint_record.suspect_witnesss_dtl_text) then 
	    UPDATE complaint.allegation_complaint
	    SET suspect_witnesss_dtl_text  = _edit_suspect_witnesss_dtl_text
	    WHERE complaint_identifier = _complaint_identifier;
	    update_edit_ind = true;
	 end if;

  
	 SELECT *
	 FROM   complaint.insert_and_return_code( edit_complaint_data->>'violation_type', 'violatncd' )
	 INTO   _edit_violation_code;
	 
     select ac.violation_code
     into _current_violation_type_code
     from complaint.allegation_complaint ac
     where ac.complaint_identifier = _complaint_identifier;

    if (_edit_violation_code <> _current_violation_type_code) then
	    if _edit_violation_code = 'WASTE' OR _edit_violation_code = 'PESTICDE' then
        UPDATE complaint.complaint
        SET    owned_by_agency_code_ref = 'EPO'
        WHERE  complaint_identifier = _complaint_identifier;
      else
        UPDATE complaint.complaint
        SET    owned_by_agency_code_ref = 'COS'
        WHERE  complaint_identifier = _complaint_identifier;
      end if;  
	    
      update complaint.allegation_complaint
      set violation_code  = _edit_violation_code
      where complaint_identifier = _complaint_identifier;
      update_edit_ind = true;
    end if;

    -- the update caused an edit, set the audit fields
    if (update_edit_ind) then
		update complaint.hwcr_complaint 
		set update_user_id = _edit_update_userid, update_utc_timestamp = _edit_update_utc_timestamp
		where complaint_identifier = _complaint_identifier;
    end if;
  end if;
 
    -- Update staging_complaint to mark the process as successful
   UPDATE complaint.staging_complaint
   SET    staging_status_code = STAGING_STATUS_CODE_SUCCESS
   WHERE  complaint_identifier = _complaint_identifier
   AND    staging_activity_code = STAGING_STATUS_CODE_EDIT
   and 	  staging_status_code = 'PENDING';

EXCEPTION
WHEN OTHERS THEN
    RAISE NOTICE 'An unexpected error occurred: %', SQLERRM;
    UPDATE complaint.staging_complaint
    SET    staging_status_code = STAGING_STATUS_CODE_ERROR
    WHERE  complaint_identifier = _complaint_identifier
    AND    staging_status_code = STAGING_STATUS_CODE_PENDING
    AND    staging_activity_code = STAGING_STATUS_CODE_EDIT;

END;]]></definition>
         <parameters>
            <parameter mode="IN" name="_complaint_identifier" type="character varying"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="format_phone_number(phone_number text)" returnType="text" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    formatted_phone_number TEXT;
BEGIN
    -- Remove all non-digit characters
    formatted_phone_number := regexp_replace(phone_number, '[^0-9]', '', 'g');
    IF (formatted_phone_number IS NULL or (length(formatted_phone_number) = 0)) then
		return null;
    END IF;
    -- Check if the first character is '1'
    IF left(formatted_phone_number, 1) = '1' THEN
        -- Add '+' in front of the phone number
        RETURN '+' || left(formatted_phone_number, 14);
    ELSE
        -- Add '+1' in front of the phone number
        RETURN '+1' || left(formatted_phone_number,13);
    END IF;
END;]]></definition>
         <parameters>
            <parameter mode="IN" name="phone_number" type="text"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="insert_and_return_code(webeoc_value character varying, code_table_type character varying)" returnType="character varying" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    new_code VARCHAR(10);  -- used in case we're creating a new code
    truncated_code varchar(10); -- if we're creating a new code, base it off of the webeoc_value.  We'll truncate this and get rid of spaces, and possibly append a number to make it unique
    truncated_short_description varchar(50); -- if we're creating a new short description, truncate this to 50 characters just in case it is too long
    live_code_value VARCHAR;
    current_utc_timestamp TIMESTAMP WITH TIME ZONE := NOW();
    target_code_table VARCHAR;
    column_name VARCHAR;
    code_exists BOOLEAN;
    suffix VARCHAR(10) := ''; -- Suffix for uniqueness
    counter INTEGER := 1; -- Counter for unique code generation
    new_display_order INTEGER; -- used for setting the display_order value of the new code
    webeoc_user_id CONSTANT varchar(6) := 'webeoc';
   
BEGIN
    -- Truncate and uppercase the webEOC value, get rid of spaces, and truncate to 9 characters to ensure we have room for adding a number for uniqueness
    truncated_code := UPPER(LEFT(regexp_replace(webeoc_value, '\s', '', 'g'), 10));
   
    -- Return null if truncated_code is empty or null
    IF truncated_code IS NULL OR truncated_code = '' THEN
        RETURN NULL;
    END IF;

    truncated_short_description := LEFT(webeoc_value, 50);

    -- Resolve the target code table and column name based on code_table_type
    CASE code_table_type
        WHEN 'reprtdbycd' THEN
            target_code_table := 'reported_by_code';
            column_name := 'reported_by_code';
        WHEN 'geoorgutcd' THEN
            target_code_table := 'geo_organization_unit_code';
            column_name := 'geo_organization_unit_code';
        WHEN 'speciescd' THEN
            target_code_table := 'species_code';
            column_name := 'species_code';
        WHEN 'cmpltntrcd' THEN
            target_code_table := 'hwcr_complaint_nature_code';
            column_name := 'hwcr_complaint_nature_code';
        WHEN 'atractntcd' THEN
            target_code_table := 'attractant_code';
            column_name := 'attractant_code';
        WHEN 'violatncd' THEN
            target_code_table := 'violation_code';
            column_name := 'violation_code';
        WHEN 'girtypecd' THEN
            target_code_table := 'gir_type_code';
            column_name := 'gir_type_code';

        ELSE RAISE EXCEPTION 'Invalid code_table_type provided: %', code_table_type;
    END CASE;
    
    -- Check if the code exists in staging_metadata_mapping
    SELECT live_data_value INTO live_code_value
    FROM complaint.staging_metadata_mapping
    WHERE staged_data_value = webEOC_value
    AND entity_code = code_table_type;
    
    -- If the code exists, return the live_data_value
    IF live_code_value IS NOT NULL THEN
        RETURN live_code_value;
    END IF;
   

    -- We're creating a new code because the webeoc code doesn't exist in staging_metadata_mapping.  We want to add this new code to our code tables, as well as the staging_meta_mapping table.
    -- Before we create new codes in our code tables, we want to make sure we're not creating a duplicate.  If the new code doesn't exist
    -- in staging_metamapping, and the code doesn't exist in the code table, then create the code in both tables.
    -- If the code doesn't exist in staging_meta_mapping, but does exist in the code table, then create a new unique code
    -- in both the staging_meta_mapping table and the code table.

    loop

	    -- if a suffix is required, truncate the code to 9 characters so that there's room for the suffix
	    IF suffix <> '' THEN
            truncated_code := LEFT(truncated_code, 9);
        END IF;

        -- Append a numeric suffix if necessary
        new_code := truncated_code || suffix;
        
        -- Check if the new_code exists in the specific code table
        EXECUTE format('SELECT EXISTS(SELECT 1 FROM "complaint".%I WHERE %I = $1)', target_code_table, column_name)
        INTO code_exists
        USING new_code;
        
        IF NOT code_exists then
        
        	-- Determine the correct display_order for the new code
            EXECUTE format('SELECT COALESCE(MAX(display_order) + 1, 1) FROM "complaint".%I WHERE %I < $1', target_code_table, column_name)
            INTO new_display_order
            USING new_code;
           
			-- Re-index the display_orders
            EXECUTE format('UPDATE "complaint".%I SET display_order = display_order + 1 WHERE display_order >= $1', target_code_table)
            USING new_display_order;
           
            -- Insert new code into the specific code table
            EXECUTE format('INSERT INTO "complaint".%I (%I, short_description, long_description, active_ind, create_user_id, create_utc_timestamp, update_user_id, update_utc_timestamp, display_order) VALUES ($1, $2, $3, ''Y'', $6, $4, $6, $4, $5)', target_code_table, column_name)
            USING new_code, truncated_short_description, webeoc_value, current_utc_timestamp, new_display_order, webeoc_user_id;

            -- Update configuration_value by 1 to nofity front-end to update
            UPDATE complaint.configuration
            SET    configuration_value = configuration_value::int + 1
            WHERE  configuration_code = 'CDTABLEVER';

            -- Insert into staging_metadata_mapping
            INSERT INTO complaint.staging_metadata_mapping (entity_code, staged_data_value, live_data_value, create_user_id, create_utc_timestamp, update_user_id, update_utc_timestamp)
            VALUES (code_table_type, webeoc_value, new_code, webeoc_user_id, current_utc_timestamp, webeoc_user_id, current_utc_timestamp);

            RETURN new_code; -- Return the new unique code
        ELSE
            -- If the code exists, increment the suffix and try again
            suffix := counter::text;
            counter := counter + 1;
        END IF;
    END LOOP;
   
END;]]></definition>
         <parameters>
            <parameter mode="IN" name="webeoc_value" type="character varying"/>
            <parameter mode="IN" name="code_table_type" type="character varying"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="insert_complaint_from_staging(_complaint_identifier character varying)" returnType="void" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[declare
    WEBEOC_USER_ID CONSTANT varchar(6) := 'webeoc';
    WEBEOC_UPDATE_TYPE_INSERT CONSTANT varchar(6) := 'INSERT';
    STAGING_STATUS_CODE_PENDING CONSTANT varchar(7) := 'PENDING';
    STAGING_STATUS_CODE_SUCCESS CONSTANT varchar(7) := 'SUCCESS' ;
    STAGING_STATUS_CODE_ERROR CONSTANT varchar(5) := 'ERROR';
    METHOD_OF_COMPLAINT_RAPP CONSTANT varchar(5) := 'RAPP';
    
    -- jsonb attribute names
    jsonb_cos_primary_phone CONSTANT text := 'cos_primary_phone';
    jsonb_cos_alt_phone CONSTANT text := 'cos_alt_phone';
    jsonb_cos_alt_phone_2 CONSTANT text := 'cos_alt_phone_2';

    complaint_data jsonb;
    -- Variable to hold the JSONB data from staging_complaint.  Used to create a new complaint
    -- Variables for 'complaint' table
    _report_type            VARCHAR(120);
    _detail_text            TEXT;
    _caller_name            VARCHAR(120);
    _caller_address         VARCHAR(120);
    _caller_email           VARCHAR(120);
    _caller_phone_1         VARCHAR(15);
    _caller_phone_2         VARCHAR(15);
    _caller_phone_3         VARCHAR(15);
    _location_summary_text  VARCHAR(120);
    _location_detailed_text VARCHAR(4000);
    _incident_utc_datetime timestamp;
    _create_utc_timestamp timestamp := (now() AT TIME zone 'UTC');
    _update_utc_timestamp timestamp := (now() AT TIME zone 'UTC');
    _create_userid              VARCHAR(200);
    _update_userid              VARCHAR(200);
    _geo_organization_unit_code VARCHAR(10);
    _incident_reported_utc_timestmp timestamp;
    _address_coordinates_lat VARCHAR(200);
    _address_coordinates_long VARCHAR(200);
    _location_geometry_point GEOMETRY;
    _complaint_status_code VARCHAR(10);
    _webeoc_identifier VARCHAR(20);

    -- Variables for 'hwcr_complaint' table
    _webeoc_species                    VARCHAR(200);
    _webeoc_hwcr_complaint_nature_code VARCHAR(200);
    _webeoc_cos_area_community         VARCHAR(200);
    _webeoc_attracts_list              VARCHAR(1000);
    _species_code                      VARCHAR(10);
    _hwcr_complaint_nature_code        VARCHAR(10);
    _other_attractants_text            VARCHAR(4000);
    _cos_reffered_by_txt               VARCHAR(4000);
    _webeoc_cos_reffered_by_lst        VARCHAR(200);
    _cos_reffered_by_lst               VARCHAR(200);
    _in_progress_ind                   VARCHAR(3);
    _observed_ind                      VARCHAR(3);
    _in_progress_ind_bool bool;
    _observed_ind_bool bool;
    _suspect_witnesss_dtl_text TEXT;
    _violation_code            VARCHAR(10);
    _gir_type_code             VARCHAR(10);
    _gir_type_description      VARCHAR(50);
    -- used to generate a uuid.  We use this to create the PK in hwcr_complaint, but
    -- we need to also use it when creating the attractants
    generated_uuid uuid;
    -- parsed attractants from the jsonb object
    attractants_array text[];
    attractant_item text;
    _attractant_code VARCHAR(10);
  BEGIN -- Fetch the JSONB data from complaint_staging using the provided identifier
    SELECT sc.complaint_jsonb
    INTO   complaint_data
    FROM   complaint.staging_complaint sc
    WHERE  sc.complaint_identifier = _complaint_identifier
    AND    sc.staging_status_code = STAGING_STATUS_CODE_PENDING -- meaning that this complaint hasn't yet been moved to the complaint table yet
    AND    sc.staging_activity_code = WEBEOC_UPDATE_TYPE_INSERT; -- this means that we're dealing with a new complaint from webeoc, not an update
    
    IF complaint_data IS NULL THEN
      RETURN;
    END IF;

    _report_type := complaint_data ->> 'report_type';
    -- to link actions-taken to a complaint the dataid needs to be used
    _webeoc_identifier := complaint_data ->> 'dataid'; 

    -- Extract and prepare data for 'complaint' table
    _detail_text := complaint_data ->> 'cos_call_details';
    _caller_name := left( complaint_data ->> 'cos_caller_name', 100 )
    ||
    CASE
    WHEN length( complaint_data ->> 'cos_caller_name' ) > 100 THEN
      '… DATA TRUNCATED'
    ELSE
      ''
    END;
    _caller_address := left( complaint_data ->> 'caller_address', 100 )
    ||
    CASE
    WHEN length( complaint_data ->> 'caller_address' ) > 100 THEN
      '… DATA TRUNCATED'
    ELSE
      ''
    END;
    _caller_email := left( complaint_data ->> 'cos_caller_email', 100 )
    ||
    CASE
    WHEN length( complaint_data ->> 'cos_caller_email' ) > 100 THEN
      '… DATA TRUNCATED'
    ELSE
      ''
    END;

    _detail_text := complaint_data ->> 'cos_call_details';
	
    -- phone numbers must be formatted as +1##########.  
    -- If the numbers from webeoc contain non-numeric characters, strip those and 
    -- add the + (or +1) prefix
   
	_caller_phone_1 := complaint.format_phone_number(complaint_data ->> jsonb_cos_primary_phone);
	_caller_phone_2 := complaint.format_phone_number(complaint_data ->> jsonb_cos_alt_phone);
	_caller_phone_3 := complaint.format_phone_number(complaint_data ->> jsonb_cos_alt_phone_2);
  _complaint_status_code := UPPER(complaint_data ->> 'status');
	   
    _location_summary_text := left(complaint_data ->> 'address', 100)
    ||
    CASE
    WHEN length(complaint_data ->> 'address') > 100 THEN
      '… DATA TRUNCATED'
    ELSE
      ''
    END;
    _location_detailed_text := complaint_data ->> 'cos_location_description';
    _incident_utc_datetime := ( complaint_data ->> 'incident_datetime' ):: timestamp AT            TIME zone 'America/Los_Angeles';
    _incident_reported_utc_timestmp := ( complaint_data ->> 'created_by_datetime' ):: timestamp AT TIME zone 'America/Los_Angeles';
	_address_coordinates_lat := complaint.validate_coordinate_field(complaint_data ->> 'address_coordinates_lat');
    _address_coordinates_long := complaint.validate_coordinate_field(complaint_data ->> 'address_coordinates_long');
   
    -- Create a geometry point based on the latitude and longitude
    IF _address_coordinates_lat IS NOT NULL AND _address_coordinates_lat <> '' AND
       _address_coordinates_long IS NOT NULL AND _address_coordinates_long <> '' THEN
        _location_geometry_point := ST_SetSRID(
            ST_MakePoint(
                CAST(_address_coordinates_long AS NUMERIC),
                CAST(_address_coordinates_lat AS NUMERIC)
            ),
            4326
        );
    ELSE
    	_location_geometry_point := ST_SetSRID(ST_MakePoint(0, 0), 4326);
	END IF;

    _create_userid := substring(complaint_data ->> 'username' from 1 for 32);
    _update_userid := _create_userid;
    _webeoc_cos_area_community := complaint_data ->> 'cos_area_community';
    _webeoc_cos_reffered_by_lst := complaint_data ->> 'cos_reffered_by_lst';
    _cos_reffered_by_txt := left(complaint_data ->> '_cos_reffered_by_txt',120);

    SELECT *
    FROM   complaint.insert_and_return_code( _webeoc_cos_reffered_by_lst, 'reprtdbycd' )
    INTO   _cos_reffered_by_lst;
    
    SELECT *
    FROM   complaint.insert_and_return_code( _webeoc_cos_area_community, 'geoorgutcd' )
    INTO   _geo_organization_unit_code;
    
    -- Insert data into 'complaint' table
    INSERT INTO complaint.complaint
                (
                            complaint_identifier,
                            complaint_type_code,
                            detail_text,
                            caller_name,
                            caller_address,
                            caller_email,
                            caller_phone_1,
                            caller_phone_2,
                            caller_phone_3,
                            location_summary_text,
                            location_detailed_text,
                            incident_utc_datetime,
                            incident_reported_utc_timestmp,
                            create_user_id,
                            create_utc_timestamp,
                            update_user_id,
                            update_utc_timestamp,
                            owned_by_agency_code_ref,
                            complaint_status_code,
                            geo_organization_unit_code,
                            location_geometry_point,
                            reported_by_code,
                            reported_by_other_text,
                            webeoc_identifier
                )
                VALUES
                (
                            _complaint_identifier,
                            _report_type,
                            _detail_text,
                            _caller_name,
                            _caller_address,
                            _caller_email,
                            _caller_phone_1,
                            _caller_phone_2,
                            _caller_phone_3,
                            _location_summary_text,
                            _location_detailed_text,
                            _incident_utc_datetime,
                            _incident_reported_utc_timestmp,
                            _create_userid,
                            _create_utc_timestamp,
                            _update_userid,
                            _update_utc_timestamp,
                            'COS',
                            _complaint_status_code,
                            _geo_organization_unit_code,
                            _location_geometry_point,
                            _cos_reffered_by_lst,
                            _cos_reffered_by_txt,
                            _webeoc_identifier
                );
    
    IF _report_type = 'HWCR' then
    
      -- convert webeoc species to our species code
	  _webeoc_species := complaint_data ->> 'species';
	  SELECT *
	  FROM   complaint.insert_and_return_code(_webeoc_species, 'speciescd')
	  INTO   _species_code;
	    
	  _webeoc_hwcr_complaint_nature_code := complaint_data ->> 'nature_of_complaint';
	  SELECT *
	  FROM   complaint.insert_and_return_code( _webeoc_hwcr_complaint_nature_code, 'cmpltntrcd' )
	  INTO   _hwcr_complaint_nature_code;
    
      -- Prepare data for 'hwcr_complaint' table
      _other_attractants_text := complaint_data ->> 'attractant_other_text';
      SELECT complaint.uuid_generate_v4()
      INTO   generated_uuid;
      
      -- Insert data into 'hwcr_complaint' table
      INSERT INTO complaint.hwcr_complaint
                  (
                              hwcr_complaint_guid,
                              other_attractants_text,
                              create_user_id,
                              create_utc_timestamp,
                              update_user_id,
                              update_utc_timestamp,
                              complaint_identifier,
                              species_code,
                              hwcr_complaint_nature_code
                  )
                  VALUES
                  (
                              generated_uuid,
                              _other_attractants_text,
                              _create_userid,
                              _create_utc_timestamp,
                              _create_userid,
                              _update_utc_timestamp,
                              _complaint_identifier,
                              _species_code,
                              _hwcr_complaint_nature_code
                  );
      
      -- Convert the comma-separated list into an array
      attractants_array := string_to_array( complaint_data ->> 'attractants_list', ',' );
      -- Iterate over the array
      foreach attractant_item IN ARRAY attractants_array
      LOOP                                                -- Trim whitespace and check if the item is 'Not Applicable'
        IF trim(attractant_item) <> 'Not Applicable' THEN -- Your insertion logic here
          SELECT *
          FROM   complaint.insert_and_return_code( trim(attractant_item), 'atractntcd' )
          INTO   _attractant_code;
          
          INSERT INTO complaint.attractant_hwcr_xref
                      (
                                  attractant_code,
                                  hwcr_complaint_guid,
                                  create_user_id,
                                  create_utc_timestamp,
                                  update_user_id,
                                  update_utc_timestamp
                      )
                      VALUES
                      (
                                  _attractant_code,
                                  generated_uuid,
                                  WEBEOC_USER_ID,
                                  _create_utc_timestamp,
                                  WEBEOC_USER_ID,
                                  _update_utc_timestamp
                      );
        
        END IF;
      END LOOP;

    ELSIF _report_type = 'GIR' then
    
      -- Prepare data for 'gir_complaint' table
      _gir_type_description := complaint_data ->> 'call_type_gir';
      SELECT *
      FROM   complaint.insert_and_return_code( _gir_type_description, 'girtypecd' )
      INTO   _gir_type_code;
      -- Insert data into 'gir_complaint' table
      INSERT INTO complaint.gir_complaint
                  (
                              gir_complaint_guid,
                              create_user_id,
                              create_utc_timestamp,
                              update_user_id,
                              update_utc_timestamp,
                              complaint_identifier,
                              gir_type_code
                  )
                  VALUES
                  (
                              complaint.uuid_generate_v4(),
                              _create_userid,
                              _create_utc_timestamp,
                              _create_userid,
                              _update_utc_timestamp,
                              _complaint_identifier,
                              _gir_type_code
                  );
      
    ELSIF _report_type = 'ERS' THEN
      -- Extract and prepare data for 'allegation_complaint' table
      _in_progress_ind := (complaint_data->>'violation_in_progress');
      _observed_ind := (complaint_data->>'observe_violation');
      _suspect_witnesss_dtl_text := complaint_data->>'suspect_details';
      SELECT *
      FROM   complaint.insert_and_return_code( complaint_data->>'violation_type', 'violatncd' )
      INTO   _violation_code;
      
      IF _in_progress_ind = 'Yes' THEN
        _in_progress_ind_bool := TRUE;
      ELSE
        _in_progress_ind_bool := FALSE;
      END IF;
      IF _observed_ind = 'Yes' THEN
        _observed_ind_bool := TRUE;
      ELSE
        _observed_ind_bool := FALSE;
      END IF;

      IF _violation_code = 'WASTE' OR _violation_code = 'PESTICDE' THEN
        UPDATE complaint.complaint
        SET    owned_by_agency_code_ref = 'EPO', complaint_status_code = 'OPEN'
        WHERE  complaint_identifier = _complaint_identifier;
      END IF;

      -- Insert data into 'allegation_complaint' table
      INSERT INTO complaint.allegation_complaint
                  (
                  			  allegation_complaint_guid,
                              in_progress_ind,
                              observed_ind,
                              suspect_witnesss_dtl_text,
                              create_user_id,
                              create_utc_timestamp,
                              update_user_id,
                              update_utc_timestamp,
                              complaint_identifier,
                              violation_code
                  )
                  VALUES
                  (
                  			  complaint.uuid_generate_v4(),
                              _in_progress_ind_bool,
                              _observed_ind_bool,
                              _suspect_witnesss_dtl_text,
                              _create_userid,
                              _create_utc_timestamp,
                              _update_userid,
                              _update_utc_timestamp,
                              _complaint_identifier,
                              _violation_code
                  );
    
    END IF;
   
    UPDATE complaint.complaint com
    SET comp_mthd_recv_cd_agcy_cd_xref_guid = (
        SELECT comp_mthd_recv_cd_agcy_cd_xref_guid 
        FROM complaint.comp_mthd_recv_cd_agcy_cd_xref cmrcacx 
        WHERE complaint_method_received_code = METHOD_OF_COMPLAINT_RAPP
        AND cmrcacx.agency_code_ref = com.owned_by_agency_code_ref
    )
    WHERE complaint_identifier = _complaint_identifier;
    UPDATE complaint.staging_complaint
    SET    staging_status_code = STAGING_STATUS_CODE_SUCCESS
    WHERE  complaint_identifier = _complaint_identifier
    AND    staging_activity_code = WEBEOC_UPDATE_TYPE_INSERT;
  
  EXCEPTION
  WHEN OTHERS THEN
    RAISE notice 'An unexpected error occurred: %', SQLERRM;
    UPDATE complaint.staging_complaint
    SET    staging_status_code = STAGING_STATUS_CODE_ERROR
    WHERE  complaint_identifier = _complaint_identifier
    and staging_status_code = STAGING_STATUS_CODE_PENDING
    AND    staging_activity_code = WEBEOC_UPDATE_TYPE_INSERT;
  
  END;]]></definition>
         <parameters>
            <parameter mode="IN" name="_complaint_identifier" type="character varying"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="insert_complaint_update_from_staging(_complaint_identifier character varying, _update_number integer)" returnType="void" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
   
    -- Variable to hold the JSONB data from staging_complaint. Used to create a new complaint
    update_complaint_data JSONB;
    UPDATE_NUMBER_TXT CONSTANT varchar(13) = 'update_number';
    WEBEOC_USER_ID CONSTANT varchar(6) := 'webeoc';
    WEBEOC_UPDATE_TYPE_INSERT CONSTANT varchar(6) := 'INSERT';
    STAGING_STATUS_CODE_PENDING CONSTANT varchar(7) := 'PENDING';
    STAGING_STATUS_CODE_SUCCESS CONSTANT varchar(7) := 'SUCCESS' ;
    STAGING_STATUS_CODE_UPDATE CONSTANT varchar(6) := 'UPDATE' ;
    STAGING_STATUS_CODE_ERROR CONSTANT varchar(5) := 'ERROR';
   
   
    
BEGIN
    -- Fetch the JSONB data from complaint_staging using the provided identifier
    SELECT sc.complaint_jsonb
    INTO   update_complaint_data
    FROM   complaint.staging_complaint sc
    WHERE  sc.complaint_identifier = _complaint_identifier
    AND    (sc.complaint_jsonb ->> UPDATE_NUMBER_TXT)::INT = _update_number
    AND    sc.staging_status_code = STAGING_STATUS_CODE_PENDING -- meaning that this complaint hasn't yet been moved to the complaint table yet
    AND    sc.staging_activity_code = STAGING_STATUS_CODE_UPDATE;

    -- This means that we're dealing with a new complaint from WebEOC, not an update
    IF update_complaint_data IS NULL THEN
        RETURN;
    END IF;
   
   -- update complaint data based on the incoming webeoc update, if necessary
   perform complaint.update_complaint_using_webeoc_update(_complaint_identifier, update_complaint_data);
   
   -- create an update record if required
   perform complaint.log_complaint_update(_complaint_identifier, update_complaint_data);

   -- Update staging_complaint to mark the process as successful
   UPDATE complaint.staging_complaint
   SET    staging_status_code = STAGING_STATUS_CODE_SUCCESS
   WHERE  complaint_identifier = _complaint_identifier
   AND    (complaint_jsonb ->> UPDATE_NUMBER_TXT)::INT = _update_number
   AND    staging_activity_code = STAGING_STATUS_CODE_UPDATE;

EXCEPTION
WHEN OTHERS THEN
    RAISE NOTICE 'An unexpected error occurred: %', SQLERRM;
    UPDATE complaint.staging_complaint
    SET    staging_status_code = STAGING_STATUS_CODE_ERROR
    WHERE  complaint_identifier = _complaint_identifier
    AND    staging_status_code = STAGING_STATUS_CODE_PENDING
    AND    (complaint_jsonb ->> UPDATE_NUMBER_TXT)::INT = _update_number
    AND    staging_activity_code = STAGING_STATUS_CODE_UPDATE;
END;]]></definition>
         <parameters>
            <parameter mode="IN" name="_complaint_identifier" type="character varying"/>
            <parameter mode="IN" name="_update_number" type="integer"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="log_complaint_update(_complaint_identifier character varying, update_complaint_data jsonb)" returnType="void" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    -- Variables for the current complaint record and the previous update record
    current_complaint_record complaint;
    prev_complaint_update_record complaint_update;

    -- Variables for 'complaint_update' table
    _upd_detail_text TEXT;
    _upd_location_summary_text VARCHAR(120);
    _upd_location_detailed_text VARCHAR(4000);
    _update_address_coordinates_lat VARCHAR(200);
    _update_address_coordinates_long VARCHAR(200);
    _upd_location_geometry_point GEOMETRY;
    _upd_caller_name VARCHAR(120);
    _upd_caller_phone_1 VARCHAR(15);
    _upd_caller_phone_2 VARCHAR(15);
    _upd_caller_phone_3 VARCHAR(15);
    _upd_caller_address VARCHAR(120);
    _upd_caller_email VARCHAR(120);
    _upd_reported_by_code VARCHAR(10);
    _upd_reported_by_other_text VARCHAR(120);
    _create_utc_timestamp TIMESTAMP := (NOW() AT TIME ZONE 'UTC');
    _update_utc_timestamp TIMESTAMP := (NOW() AT TIME ZONE 'UTC');
    _create_userid VARCHAR(200);
    _update_userid VARCHAR(200);
    _update_number INT4 = (update_complaint_data ->> 'update_number') ::INT;
    _update_number_exists BOOLEAN:= false; -- is this an update for a complaint with an update_number that already exists?  if so, edit it
    
    -- Variables for storing the changes to be inserted
    insert_upd_detail_text TEXT;
    insert_upd_location_summary_text VARCHAR(120);
    insert_upd_location_detailed_text VARCHAR(4000);
    insert_upd_location_geometry_point GEOMETRY;
    insert_upd_caller_name VARCHAR(120);
    insert_upd_caller_phone_1 VARCHAR(15);
    insert_upd_caller_phone_2 VARCHAR(15);
    insert_upd_caller_phone_3 VARCHAR(15);
    insert_upd_caller_address VARCHAR(120);
    insert_upd_caller_email VARCHAR(120);
    insert_upd_reported_by_code VARCHAR(10);
    insert_upd_reported_by_other_text VARCHAR(120);
    
    -- Flag to indicate if there's any difference
    has_difference BOOLEAN := FALSE;
   
    USERNAME_TXT CONSTANT varchar(8) = 'username';

	_webeoc_identifier VARCHAR(20);

BEGIN
    -- Get the current state of the complaint
    SELECT *
    INTO current_complaint_record
    FROM complaint.complaint
    WHERE complaint_identifier = _complaint_identifier;

    -- Get the previous update, if any
    SELECT *
    INTO prev_complaint_update_record
    FROM complaint.complaint_update
    WHERE complaint_identifier = _complaint_identifier
    ORDER BY update_seq_number DESC
    LIMIT 1;
   
   select exists (
     select 1
     from complaint.complaint_update cu
	 where complaint_identifier = _complaint_identifier and update_seq_number = _update_number
   ) into _update_number_exists;

    -- Extract and prepare data for 'complaint_update' table
    _upd_detail_text := update_complaint_data ->> 'update_call_details';
    _upd_location_summary_text := update_complaint_data ->> 'update_address';
    _upd_location_detailed_text := update_complaint_data ->> 'update_location_description';
    _update_address_coordinates_lat := update_complaint_data ->> 'update_address_coordinates_lat';
    _update_address_coordinates_long := update_complaint_data ->> 'update_address_coordinates_long';
    _upd_caller_name := update_complaint_data ->> 'update_caller_name';
    _upd_caller_phone_1 := update_complaint_data ->> 'update_primary_phone';
    _upd_caller_phone_2 := update_complaint_data ->> 'update_alt_phone';
    _upd_caller_phone_3 := update_complaint_data ->> 'update_alt_phone_2';
    _upd_caller_address := update_complaint_data ->> 'update_caller_address';
    _upd_caller_email := update_complaint_data ->> 'update_caller_email';
    _upd_reported_by_code := update_complaint_data ->> 'update_reffered_by_lst';
    _upd_reported_by_other_text := update_complaint_data ->> 'update_reffered_by_txt';
    _create_userid := substring(update_complaint_data ->> USERNAME_TXT from 1 for 32);
    _update_userid := substring(update_complaint_data ->> USERNAME_TXT from 1 for 32);
	_webeoc_identifier := update_complaint_data ->> 'dataid'; 

    -- Get the codes from our application (inserting if necessary) for the codes retrieved from WebEOC
    SELECT *
    INTO   _upd_reported_by_code
    FROM   complaint.insert_and_return_code(_upd_reported_by_code, 'reprtdbycd');

    -- Format Phone Numbers
    _upd_caller_phone_1 := complaint.format_phone_number(_upd_caller_phone_1);
    _upd_caller_phone_2 := complaint.format_phone_number(_upd_caller_phone_2);
    _upd_caller_phone_3 := complaint.format_phone_number(_upd_caller_phone_3);

    -- Create a geometry point based on the latitude and longitude
    IF _update_address_coordinates_lat IS NOT NULL AND _update_address_coordinates_lat <> '' AND
       _update_address_coordinates_long IS NOT NULL AND _update_address_coordinates_long <> '' THEN
        _upd_location_geometry_point := ST_SetSRID(
            ST_MakePoint(
                CAST(_update_address_coordinates_long AS NUMERIC),
                CAST(_update_address_coordinates_lat AS NUMERIC)
            ),
            4326
        );
    END IF;

    -- Compare update_complaint_data against current_complaint_record and prev_complaint_update_record
    IF (_upd_detail_text IS NOT NULL AND _upd_detail_text <> '' AND
        (_upd_detail_text IS DISTINCT FROM prev_complaint_update_record.upd_detail_text OR prev_complaint_update_record.upd_detail_text IS NULL) AND
        (_upd_detail_text IS DISTINCT FROM current_complaint_record.detail_text OR current_complaint_record.detail_text IS NULL)) THEN
        insert_upd_detail_text := _upd_detail_text;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_detail_text := prev_complaint_update_record.upd_detail_text;
    ELSE
        insert_upd_detail_text := NULL;
    END IF;

    IF (_upd_location_summary_text IS NOT NULL AND _upd_location_summary_text <> '' AND
        (_upd_location_summary_text IS DISTINCT FROM prev_complaint_update_record.upd_location_summary_text OR prev_complaint_update_record.upd_location_summary_text IS NULL) AND
        (_upd_location_summary_text IS DISTINCT FROM current_complaint_record.location_summary_text OR current_complaint_record.location_summary_text IS NULL)) THEN
        insert_upd_location_summary_text := _upd_location_summary_text;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_location_summary_text := prev_complaint_update_record.upd_location_summary_text;
    ELSE
        insert_upd_location_summary_text := NULL;
    END IF;

    IF (_upd_location_detailed_text IS NOT NULL AND _upd_location_detailed_text <> '' AND
        (_upd_location_detailed_text IS DISTINCT FROM prev_complaint_update_record.upd_location_detailed_text OR prev_complaint_update_record.upd_location_detailed_text IS NULL) AND
        (_upd_location_detailed_text IS DISTINCT FROM current_complaint_record.location_detailed_text OR current_complaint_record.location_detailed_text IS NULL)) THEN
        insert_upd_location_detailed_text := _upd_location_detailed_text;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_location_detailed_text := prev_complaint_update_record.upd_location_detailed_text;
    ELSE
        insert_upd_location_detailed_text := NULL;
    END IF;

    IF (_upd_location_geometry_point IS NOT NULL AND
        (_upd_location_geometry_point IS DISTINCT FROM prev_complaint_update_record.upd_location_geometry_point OR prev_complaint_update_record.upd_location_geometry_point IS NULL) AND
        (_upd_location_geometry_point IS DISTINCT FROM current_complaint_record.location_geometry_point OR current_complaint_record.location_geometry_point IS NULL)) THEN
        insert_upd_location_geometry_point := _upd_location_geometry_point;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_location_geometry_point := prev_complaint_update_record.upd_location_geometry_point;
    ELSE
        insert_upd_location_geometry_point := NULL;
    END IF;

    IF (_upd_caller_name IS NOT NULL AND _upd_caller_name <> '' AND
        (_upd_caller_name IS DISTINCT FROM prev_complaint_update_record.upd_caller_name OR prev_complaint_update_record.upd_caller_name IS NULL) AND
        (_upd_caller_name IS DISTINCT FROM current_complaint_record.caller_name OR current_complaint_record.caller_name IS NULL)) THEN
        insert_upd_caller_name := _upd_caller_name;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_caller_name := prev_complaint_update_record.upd_caller_name;
    ELSE
        insert_upd_caller_name := NULL;
    END IF;

    IF (_upd_caller_phone_1 IS NOT NULL AND _upd_caller_phone_1 <> '' AND
        (_upd_caller_phone_1 IS DISTINCT FROM prev_complaint_update_record.upd_caller_phone_1 OR prev_complaint_update_record.upd_caller_phone_1 IS NULL) AND
        (_upd_caller_phone_1 IS DISTINCT FROM current_complaint_record.caller_phone_1 OR current_complaint_record.caller_phone_1 IS NULL)) THEN
        insert_upd_caller_phone_1 := _upd_caller_phone_1;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_caller_phone_1 := prev_complaint_update_record.upd_caller_phone_1;
    ELSE
        insert_upd_caller_phone_1 := NULL;
    END IF;

    IF (_upd_caller_phone_2 IS NOT NULL AND _upd_caller_phone_2 <> '' AND
        (_upd_caller_phone_2 IS DISTINCT FROM prev_complaint_update_record.upd_caller_phone_2 OR prev_complaint_update_record.upd_caller_phone_2 IS NULL) AND
        (_upd_caller_phone_2 IS DISTINCT FROM current_complaint_record.caller_phone_2 OR current_complaint_record.caller_phone_2 IS NULL)) THEN
        insert_upd_caller_phone_2 := _upd_caller_phone_2;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_caller_phone_2 := prev_complaint_update_record.upd_caller_phone_2;
    ELSE
        insert_upd_caller_phone_2 := NULL;
    END IF;

    IF (_upd_caller_phone_3 IS NOT NULL AND _upd_caller_phone_3 <> '' AND
        (_upd_caller_phone_3 IS DISTINCT FROM prev_complaint_update_record.upd_caller_phone_3 OR prev_complaint_update_record.upd_caller_phone_3 IS NULL) AND
        (_upd_caller_phone_3 IS DISTINCT FROM current_complaint_record.caller_phone_3 OR current_complaint_record.caller_phone_3 IS NULL)) THEN
        insert_upd_caller_phone_3 := _upd_caller_phone_3;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_caller_phone_3 := prev_complaint_update_record.upd_caller_phone_3;
    ELSE
        insert_upd_caller_phone_3 := NULL;
    END IF;

    IF (_upd_caller_address IS NOT NULL AND _upd_caller_address <> '' AND
        (_upd_caller_address IS DISTINCT FROM prev_complaint_update_record.upd_caller_address OR prev_complaint_update_record.upd_caller_address IS NULL) AND
        (_upd_caller_address IS DISTINCT FROM current_complaint_record.caller_address OR current_complaint_record.caller_address IS NULL)) THEN
        insert_upd_caller_address := _upd_caller_address;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_caller_address := prev_complaint_update_record.upd_caller_address;
    ELSE
        insert_upd_caller_address := NULL;
    END IF;

    IF (_upd_caller_email IS NOT NULL AND _upd_caller_email <> '' AND
        (_upd_caller_email IS DISTINCT FROM prev_complaint_update_record.upd_caller_email OR prev_complaint_update_record.upd_caller_email IS NULL) AND
        (_upd_caller_email IS DISTINCT FROM current_complaint_record.caller_email OR current_complaint_record.caller_email IS NULL)) THEN
        insert_upd_caller_email := _upd_caller_email;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_caller_email := prev_complaint_update_record.upd_caller_email;
    ELSE
        insert_upd_caller_email := NULL;
    END IF;

    IF (_upd_reported_by_code IS NOT NULL AND _upd_reported_by_code <> '' AND
        (_upd_reported_by_code IS DISTINCT FROM prev_complaint_update_record.upd_reported_by_code OR prev_complaint_update_record.upd_reported_by_code IS NULL) AND
        (_upd_reported_by_code IS DISTINCT FROM current_complaint_record.reported_by_code OR current_complaint_record.reported_by_code IS NULL)) THEN
        insert_upd_reported_by_code := _upd_reported_by_code;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_reported_by_code := prev_complaint_update_record.upd_reported_by_code;
    ELSE
        insert_upd_reported_by_code := NULL;
    END IF;

    IF (_upd_reported_by_other_text IS NOT NULL AND _upd_reported_by_other_text <> '' AND
        (_upd_reported_by_other_text IS DISTINCT FROM prev_complaint_update_record.upd_reported_by_other_text OR prev_complaint_update_record.upd_reported_by_other_text IS NULL) AND
        (_upd_reported_by_other_text IS DISTINCT FROM current_complaint_record.reported_by_other_text OR current_complaint_record.reported_by_other_text IS NULL)) THEN
        insert_upd_reported_by_other_text := _upd_reported_by_other_text;
        has_difference := TRUE;
    ELSIF _update_number_exists THEN
        insert_upd_reported_by_other_text := prev_complaint_update_record.upd_reported_by_other_text;
    ELSE
        insert_upd_reported_by_other_text := NULL;
    END IF;

    -- Insert the record if there are any differences, either log the complaint or update the previously existing complaint
    IF has_difference then
    	if _update_number_exists then
	    	UPDATE complaint.complaint_update 
	    		set upd_detail_text = insert_upd_detail_text,
		            upd_location_summary_text = insert_upd_location_summary_text,
		            upd_location_detailed_text = insert_upd_location_detailed_text,
		            upd_location_geometry_point = insert_upd_location_geometry_point,
                    upd_caller_name = insert_upd_caller_name,	
                    upd_caller_phone_1 = insert_upd_caller_phone_1,
                    upd_caller_phone_2 = insert_upd_caller_phone_2,
                    upd_caller_phone_3 = insert_upd_caller_phone_3,
                    upd_caller_address = insert_upd_caller_address,
                    upd_caller_email = insert_upd_caller_email,
                    upd_reported_by_code = insert_upd_reported_by_code,
                    upd_reported_by_other_text = insert_upd_reported_by_other_text,
		            update_user_id = _update_userid,
		            update_utc_timestamp = _update_utc_timestamp
		   where complaint_identifier = _complaint_identifier and update_seq_number = _update_number;
    	else
    	
	        INSERT INTO complaint.complaint_update (
	            complaint_identifier,
	            update_seq_number,
	            upd_detail_text,
	            upd_location_summary_text,
	            upd_location_detailed_text,
	            upd_location_geometry_point,
                upd_caller_name,
                upd_caller_phone_1,
                upd_caller_phone_2,
                upd_caller_phone_3,
                upd_caller_address,
                upd_caller_email,
                upd_reported_by_code,
                upd_reported_by_other_text,
	            create_user_id,
	            create_utc_timestamp,
	            update_user_id,
	            update_utc_timestamp,
				webeoc_identifier
	        ) VALUES (
	            _complaint_identifier,
	            _update_number,
	            insert_upd_detail_text,
	            insert_upd_location_summary_text,
	            insert_upd_location_detailed_text,
	            insert_upd_location_geometry_point,
                insert_upd_caller_name,
                insert_upd_caller_phone_1,
                insert_upd_caller_phone_2,
                insert_upd_caller_phone_3,
                insert_upd_caller_address,
                insert_upd_caller_email,
                insert_upd_reported_by_code,
                insert_upd_reported_by_other_text,
	            _create_userid,
	            _create_utc_timestamp,
	            _update_userid,
	            _update_utc_timestamp,
				_webeoc_identifier
	        );
       end if;
       
       -- Update timestamp to latest
       UPDATE complaint.complaint
       SET    update_utc_timestamp = _update_utc_timestamp, update_user_id = _update_userid
       WHERE  complaint_identifier = _complaint_identifier;
    END IF;
END;]]></definition>
         <parameters>
            <parameter mode="IN" name="_complaint_identifier" type="character varying"/>
            <parameter mode="IN" name="update_complaint_data" type="jsonb"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="process_staging_activity_taken(staging_id uuid, action_taken_type character varying)" returnType="void" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
  WEBEOC_USER_ID CONSTANT varchar(6) := 'webeoc'; 
  WEBEOC_ACTION_TIMESTAMP CONSTANT timestamp := NOW()::timestamp;

  STAGING_STATUS_CODE_PENDING CONSTANT varchar(7) := 'PENDING';
  STAGING_STATUS_CODE_SUCCESS CONSTANT varchar(7) := 'SUCCESS' ;
  STAGING_STATUS_CODE_ERROR CONSTANT varchar(5) := 'ERROR';
  
  -- select the stage object
  staged_data jsonb;

  _action_taken_id        UUID;
  _complaint_update_id    UUID;
  _complaint_id			  VARCHAR(20);
  _logged_by              VARCHAR(250);
  _action_timestamp       TIMESTAMP;
  _details                TEXT;
  _is_update              BOOL;
 
BEGIN

RAISE notice 'EXECUTING FUNCTION';

  SELECT sc.complaint_jsonb
  INTO   staged_data
  FROM   complaint.staging_complaint sc
  WHERE  sc.staging_complaint_guid = staging_id
  AND    sc.staging_status_code = STAGING_STATUS_CODE_PENDING 
  AND    sc.staging_activity_code = action_taken_type; 
    
  IF staged_data IS NULL THEN
	  -- RAISE notice 'NO COMPLAINT FOUND'; No complaint found is expected now for actions taken on complaints prior to Jan 1 2025
    RETURN;
  END IF;

  _action_taken_id := staged_data ->> 'actionTakenId';
  _complaint_id := staged_data ->> 'complaintId';
  _complaint_update_id := staged_data ->> 'complaintUpdateGuid';
  _logged_by := staged_data ->> 'loggedBy';
  _action_timestamp := (staged_data ->> 'actionTimestamp')::timestamp AT TIME ZONE 'America/Vancouver';
  _details := staged_data ->> 'details';
  _is_update := staged_data ->> 'isUpdate';

  -- insert new action-taken
  INSERT INTO complaint.action_taken (
    action_taken_guid, 
    complaint_identifier, 
    complaint_update_guid, 
    action_details_txt, 
    logged_by_txt, 
    action_utc_timestamp, create_user_id, create_utc_timestamp, update_user_id, update_utc_timestamp
  )
  VALUES (
    _action_taken_id, 
    _complaint_id, 
    _complaint_update_id, 
    _details, 
    _logged_by, 
    _action_timestamp, 
    WEBEOC_USER_ID, WEBEOC_ACTION_TIMESTAMP, WEBEOC_USER_ID, WEBEOC_ACTION_TIMESTAMP
  );

  -- update the staging table
  UPDATE complaint.staging_complaint
  SET    staging_status_code = STAGING_STATUS_CODE_SUCCESS
  WHERE  staging_complaint_guid = staging_id
  AND    staging_status_code = STAGING_STATUS_CODE_PENDING 
  AND    staging_activity_code = action_taken_type;

  EXCEPTION
  WHEN OTHERS THEN
    RAISE notice 'An unexpected error occurred: %', SQLERRM;
    UPDATE complaint.staging_complaint
    SET    staging_status_code = STAGING_STATUS_CODE_ERROR
    WHERE  staging_complaint_guid = staging_id
    AND    staging_status_code = STAGING_STATUS_CODE_PENDING 
    AND    staging_activity_code = action_taken_type;
  

END;]]></definition>
         <parameters>
            <parameter mode="IN" name="staging_id" type="uuid"/>
            <parameter mode="IN" name="action_taken_type" type="character varying"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="update_audit_columns()" returnType="trigger" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
calling_query TEXT;
update_user_id_found BOOL;
BEGIN
        IF NEW.update_utc_timestamp IS NOT DISTINCT FROM OLD.update_utc_timestamp THEN
            NEW.update_utc_timestamp := CURRENT_TIMESTAMP;
        END IF;
        SELECT current_query() INTO calling_query;
        SELECT POSITION('update_user_id' IN calling_query) > 0 INTO update_user_id_found;
        IF update_user_id_found = 'f' THEN
            NEW.update_user_id := CURRENT_USER;
        END IF;
        RETURN NEW;
    END;]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="update_complaint_using_webeoc_update(_complaint_identifier character varying, update_complaint_data jsonb)" returnType="void" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[declare
	current_complaint_record complaint;
    -- Variables from webeoc that may be used to update a record in the COMPLAINT table
    -- used to determine if a webeoc update is actually an update.  WebEOC's API will unfortunately default to
    -- the original value of a field if another field is updated.  So, we ignore these as part of updates.  This
    -- means that WebEOC will not be able to update a value to the original value, but that's something the project
    -- team has decided to risk.
    original_complaint_record JSONB;
    _update_webeoc_species VARCHAR(200); -- species code from WebEOC
    _update_species_code VARCHAR(10); -- our species code, based on the code from WebEOC
    _parent_report_type VARCHAR(10); -- used to differentiate between HWCR and ERS complaints.  ignore anything else
    _update_violation_code            VARCHAR(10);
    _create_userid VARCHAR(200);
    _update_userid VARCHAR(200);
    _create_utc_timestamp TIMESTAMP := (NOW() AT TIME ZONE 'UTC');
    _update_utc_timestamp TIMESTAMP := (NOW() AT TIME ZONE 'UTC');
    
    -- Original complaint values, used to compare against incoming changes
    _original_species_code VARCHAR(10);
    _original_violation_type_code VARCHAR(10);
   
   _current_species_code VARCHAR(10);
   _current_violation_type_code VARCHAR(10);
   
    USERNAME_TXT CONSTANT varchar(8) = 'username';
   
BEGIN
    -- These fields are retrieved to potentially update an existing complaint record
    _update_webeoc_species := update_complaint_data ->> 'update_species';
    _parent_report_type := update_complaint_data ->> 'parent_report_type';
    _create_userid := substring(update_complaint_data ->> USERNAME_TXT from 1 for 32);
    _update_userid := substring(update_complaint_data ->> USERNAME_TXT from 1 for 32);
   
    -- Get the current state of the complaint
    SELECT *
    INTO   current_complaint_record
    FROM   complaint.complaint
    WHERE  complaint_identifier = _complaint_identifier;
   
    -- Get the original record via the history table
    select ch.data_after_executed_operation
    into original_complaint_record
    from complaint.complaint_h ch 
    where ch.target_row_id = _complaint_identifier
    and ch.operation_type = 'I';
  
  if (_parent_report_type = 'HWCR') then
    -- get the code based on the update from WebEOC
    SELECT *
    INTO   _update_species_code
    FROM   complaint.insert_and_return_code(_update_webeoc_species, 'speciescd');
   
    -- get the current species code
   	SELECT hc.species_code 
   	INTO _current_species_code
	FROM complaint.hwcr_complaint hc 
	WHERE hc.complaint_identifier = _complaint_identifier;

    select hch.data_after_executed_operation ->> 'species_code'
    into _original_species_code
    from complaint.complaint c inner join complaint.hwcr_complaint hc on c.complaint_identifier = hc.complaint_identifier
    inner join complaint.hwcr_complaint_h hch on hc.hwcr_complaint_guid = hch.target_row_id
    where c.complaint_identifier = _complaint_identifier
    and hch.operation_type = 'I';

    if ((_update_species_code <> _original_species_code) and (_update_species_code <> _current_species_code)) then 
    	update complaint.hwcr_complaint
    	set species_code = _update_species_code
    	where complaint_identifier = _complaint_identifier;
    end if;

  end if;
 
  if (_parent_report_type = 'ERS') then
	 SELECT *
	 FROM   complaint.insert_and_return_code( update_complaint_data->>'update_violation_type', 'violatncd' )
	 INTO   _update_violation_code;
	 
     select ac.violation_code
     into _current_violation_type_code
     from complaint.allegation_complaint ac
     where ac.complaint_identifier = _complaint_identifier;

     select ach.data_after_executed_operation ->> 'violation_code'
     into _original_violation_type_code
     from complaint.complaint c inner join complaint.allegation_complaint ac on c.complaint_identifier = ac.complaint_identifier 
     inner join complaint.allegation_complaint_h ach on ac.allegation_complaint_guid = ach.target_row_id
     where c.complaint_identifier  = _complaint_identifier
     and ach.operation_type = 'I';
    
     if ((_update_violation_code <> _original_violation_type_code) and (_update_violation_code <> _current_violation_type_code)) then 
	    if _update_violation_code = 'WASTE' OR _update_violation_code = 'PESTICDE' then
        UPDATE complaint.complaint
        SET    owned_by_agency_code_ref = 'EPO'
        WHERE  complaint_identifier = _complaint_identifier;
      else
        UPDATE complaint.complaint
        SET    owned_by_agency_code_ref = 'COS'
        WHERE  complaint_identifier = _complaint_identifier;
      end if;

    	update complaint.allegation_complaint
    	set violation_code  = _update_violation_code
    	where complaint_identifier = _complaint_identifier;
     end if;		    
  end if;

  -- We always want to update the complaint last updated field to indicate an update was received.
  update complaint.complaint
	set comp_last_upd_utc_timestamp = _update_utc_timestamp
	where complaint_identifier = _complaint_identifier;
END;]]></definition>
         <parameters>
            <parameter mode="IN" name="_complaint_identifier" type="character varying"/>
            <parameter mode="IN" name="update_complaint_data" type="jsonb"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="uuid_generate_v1()" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_generate_v1]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="uuid_generate_v1mc()" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_generate_v1mc]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="true" name="uuid_generate_v3(namespace uuid, name text)" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_generate_v3]]></definition>
         <parameters>
            <parameter mode="IN" name="namespace" type="uuid"/>
            <parameter mode="IN" name="name" type="text"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="uuid_generate_v4()" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_generate_v4]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="true" name="uuid_generate_v5(namespace uuid, name text)" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_generate_v5]]></definition>
         <parameters>
            <parameter mode="IN" name="namespace" type="uuid"/>
            <parameter mode="IN" name="name" type="text"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="true" name="uuid_nil()" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_nil]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="true" name="uuid_ns_dns()" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_ns_dns]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="true" name="uuid_ns_oid()" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_ns_oid]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="true" name="uuid_ns_url()" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_ns_url]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="true" name="uuid_ns_x500()" returnType="uuid" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="c"><![CDATA[uuid_ns_x500]]></definition>
         <parameters>
            <parameter mode="IN"/>
         </parameters>
      </routine>
      <routine dataAccess="MODIFIES" deterministic="false" name="validate_coordinate_field(coordinate_field text)" returnType="text" securityType="INVOKER" type="FUNCTION">
         <comment/>
         <definition language="plpgsql"><![CDATA[DECLARE
    formatted_coordinate_field TEXT;
BEGIN
    -- Confirm the coordinate_field is a valid value 
    formatted_coordinate_field := regexp_substr(coordinate_field, '^[-+]?([0-9]{1,2}|1[0-7][0-9]|180)(\.[0-9]{1,10})');
    IF (formatted_coordinate_field IS NULL or (length(formatted_coordinate_field) = 0)) then
		return NULL;
	-- Valid match so return the formatted_coordinate_field
	else return formatted_coordinate_field;
    END IF;
END;]]></definition>
         <parameters>
            <parameter mode="IN" name="coordinate_field" type="text"/>
         </parameters>
      </routine>
   </routines>
</database>
