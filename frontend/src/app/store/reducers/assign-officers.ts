import { createSlice } from "@reduxjs/toolkit";
import { RootState, AppThunk } from "../store";
import config from "../../../config";
import axios from "axios";
import { AssignOfficersState } from "../../types/complaints/officers-in-zone-state";
import { Person } from "../../types/person/person";
import { UUID } from "crypto";

const initialState: AssignOfficersState = {
    officersInZone: []
};

export const assignOfficersSlice = createSlice({
  name: "assignOfficers",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setOfficersInZone: (state, action) => {
      const { payload } = action;
      const officersInZone:Person[] = payload.officersInZone;
      return { ...state, officersInZone};
    },
  },

  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {},
});

// export the actions/reducers
export const { setOfficersInZone } = assignOfficersSlice.actions;

// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched
export const getOfficersInZone = (office_guid: UUID): AppThunk => async (dispatch) => {
  const token = localStorage.getItem("user");
  if (token) {
    axios.defaults.headers.common.Authorization = `Bearer ${token}`;
    const response = await axios.get(`${config.API_BASE_URL}/v1/officer/find-by-office/4060f406-fb58-4df5-bfea-fd23bf9b9bed`);
    dispatch(
        setOfficersInZone({
        officersInZone: response.data
      })
    );
  }
};

export const officersInZone = (state: RootState) => { 
  const { officersInZone } = state.officersInZone;
  return officersInZone;
}

export default assignOfficersSlice.reducer;